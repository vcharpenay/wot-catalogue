prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix sd: <http://www.w3.org/ns/sparql-service-description#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix sw: <http://swagger.io/v2/schema.json#>

# curl https://raw.githubusercontent.com/vcharpenay/wot-cloud/master/owl/oneIoTa.ttl > oneiota-owl.ttl
# sparql --data oneiota-owl.ttl --query oneiota.rq > oneiota.ttl

construct {
  ?api a skos:Concept ;
       rdfs:label ?apiLabel .
  sw:SwaggerAPI skos:narrower ?api .
  ?path a skos:Concept .
  sw:Path skos:narrower ?path .
  ?api skos:related ?path .
  ?op a skos:Concept ;
      skos:definition ?opDef .
  ?type skos:narrower ?op .

  ?api skos:inScheme sw: .
  ?path skos:inScheme sw: .
  ?op skos:inScheme sw: .
} where {
  ?api rdfs:subClassOf sw:SwaggerAPI, ?pathsRestriction ;
       rdfs:label ?apiLabel .
  ?pathsRestriction a owl:Restriction ;
                    owl:onProperty sw:paths ;
                    owl:someValuesFrom ?path .
  ?path rdfs:subClassOf sw:Path, ?opRestriction .
  ?opRestriction a owl:Restriction ;
                 owl:onProperty sw:operations ;
                 owl:someValuesFrom ?op .
  ?op rdfs:subClassOf ?type ;
      rdfs:comment ?opDef .
  values ?type { sw:GetOperation sw:PostOperation sw:PutOperation }
}
