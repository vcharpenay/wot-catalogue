prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix bacnet: <http://purl.org/wot-catalogue/bacnet#>
prefix BACnet: <http://bacowl.sourceforge.net/2012/bacnet#>

construct {
  ?obj a skos:Concept ;
       skos:prefLabel ?objLabel ;
       skos:broader ?upperObj .
  ?prop a skos:Concept ;
        skos:prefLabel ?propLabel ;
    	skos:broader ?upperProp .
  ?obj skos:related ?prop .
  ?prop skos:related ?dt .
  
  ?service a skos:Concept ;
           skos:prefLabel ?serviceLabel ;
    	   skos:broader bacnet:servicesSupported .

  ?obj skos:inScheme bacnet:Scheme .
  ?prop skos:inScheme bacnet:Scheme .
  ?service skos:inScheme bacnet:Scheme .
} where {
  {
    ?bacObj rdfs:subClassOf+ BACnet:Object ;
         rdfs:subClassOf ?bacUpperObj .
    bind (strafter(str(?bacObj), '#') as ?objLabel)
    bind (IRI(concat(str(bacnet:), str(?objLabel))) as ?obj)
    bind (IRI(concat(str(bacnet:), strafter(str(?bacUpperObj), '#'))) as ?upperObj)
    ?bacProp rdfs:subPropertyOf+ BACnet:Property ;
          rdfs:subPropertyOf ?bacUpperProp ;
		  rdfs:domain ?bacObj ;
          rdfs:range ?bacPropType .
    bind (strafter(str(?bacProp), '#') as ?propLabel)
    bind (IRI(if(strbefore(str(?bacProp), str(?propLabel))=str(BACnet:), concat(str(bacnet:), str(?propLabel)), concat(str(bacnet:), strafter(str(?bacObj), '#'), str(?propLabel)))) as ?prop)
    bind (IRI(concat(str(bacnet:), strafter(str(?bacUpperProp), '#'))) as ?upperProp)
    optional {
      ?bacPropType rdfs:subClassOf ?valRestriction .
      ?valRestriction a owl:Restriction ;
                      owl:onProperty rdf:value ;
                      owl:someValuesFrom ?complexDt .
      ?complexDt a rdfs:Datatype ;
                 owl:onDatatype ?xsd .
    }
    bind (IRI(concat(str(bacnet:), strafter(str(?bacPropType), '#'))) as ?propType)
    bind (if(bound(?xsd), ?xsd, ?propType) as ?dt)
  }
  union
  {
    BACnet:ServicesSupported rdfs:subClassOf ?listRestriction .
    ?listRestriction a owl:Restriction ;
                     owl:onProperty skos:member ;
                     owl:someValuesFrom ?oneOf .
    ?oneOf a owl:Class ;
           owl:oneOf ?list .
    ?list rdf:rest*/rdf:first ?bacService .
    bind (IRI(concat(str(bacnet:), strafter(str(?bacService), '#'))) as ?service)
    bind (strafter(str(?bacService), '#') as ?serviceLabel)
  }
}
