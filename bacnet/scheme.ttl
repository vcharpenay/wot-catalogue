@prefix APDU: <http://bacowl.sourceforge.net/2012/bacnet/APDU#> .
@prefix AbortPDU: <http://bacowl.sourceforge.net/2012/bacnet/AbortPDU#> .
@prefix AbortReason: <http://bacowl.sourceforge.net/2012/bacnet/AbortReason#> .
@prefix AccessAuthenticationFactorDisable: <http://bacowl.sourceforge.net/2012/bacnet/AccessAuthenticationFactorDisable#> .
@prefix AccessCredentialDisable: <http://bacowl.sourceforge.net/2012/bacnet/AccessCredentialDisable#> .
@prefix AccessCredentialDisableReason: <http://bacowl.sourceforge.net/2012/bacnet/AccessCredentialDisableReason#> .
@prefix AccessCredentialObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessCredentialObject#> .
@prefix AccessDoorObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessDoorObject#> .
@prefix AccessEvent: <http://bacowl.sourceforge.net/2012/bacnet/AccessEvent#> .
@prefix AccessPassbackMode: <http://bacowl.sourceforge.net/2012/bacnet/AccessPassbackMode#> .
@prefix AccessPointObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessPointObject#> .
@prefix AccessRightsObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessRightsObject#> .
@prefix AccessRule: <http://bacowl.sourceforge.net/2012/bacnet/AccessRule#> .
@prefix AccessRuleLocationSpecifier: <http://bacowl.sourceforge.net/2012/bacnet/AccessRuleLocationSpecifier#> .
@prefix AccessRuleTimeRangeSpecifier: <http://bacowl.sourceforge.net/2012/bacnet/AccessRuleTimeRangeSpecifier#> .
@prefix AccessUserObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessUserObject#> .
@prefix AccessUserType: <http://bacowl.sourceforge.net/2012/bacnet/AccessUserType#> .
@prefix AccessZoneObject: <http://bacowl.sourceforge.net/2012/bacnet/AccessZoneObject#> .
@prefix AccessZoneOccupancyState: <http://bacowl.sourceforge.net/2012/bacnet/AccessZoneOccupancyState#> .
@prefix AccumulatorObject: <http://bacowl.sourceforge.net/2012/bacnet/AccumulatorObject#> .
@prefix AccumulatorRecord: <http://bacowl.sourceforge.net/2012/bacnet/AccumulatorRecord#> .
@prefix AccumulatorRecordAccumulatorStatus: <http://bacowl.sourceforge.net/2012/bacnet/AccumulatorRecordAccumulatorStatus#> .
@prefix AcknowledgeAlarmRequest: <http://bacowl.sourceforge.net/2012/bacnet/AcknowledgeAlarmRequest#> .
@prefix Action: <http://bacowl.sourceforge.net/2012/bacnet/Action#> .
@prefix ActionCommand: <http://bacowl.sourceforge.net/2012/bacnet/ActionCommand#> .
@prefix ActionList: <http://bacowl.sourceforge.net/2012/bacnet/ActionList#> .
@prefix AddListElementRequest: <http://bacowl.sourceforge.net/2012/bacnet/AddListElementRequest#> .
@prefix Address: <http://bacowl.sourceforge.net/2012/bacnet/Address#> .
@prefix AddressBinding: <http://bacowl.sourceforge.net/2012/bacnet/AddressBinding#> .
@prefix AnalogInputObject: <http://bacowl.sourceforge.net/2012/bacnet/AnalogInputObject#> .
@prefix AnalogOutputObject: <http://bacowl.sourceforge.net/2012/bacnet/AnalogOutputObject#> .
@prefix AnalogValueObject: <http://bacowl.sourceforge.net/2012/bacnet/AnalogValueObject#> .
@prefix AssignedAccessRights: <http://bacowl.sourceforge.net/2012/bacnet/AssignedAccessRights#> .
@prefix AtomicReadFileACK: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileACK#> .
@prefix AtomicReadFileACKAccessMethodChoice: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileACKAccessMethodChoice#> .
@prefix AtomicReadFileACKAccessMethodRecordAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileACKAccessMethodRecordAccess#> .
@prefix AtomicReadFileACKAccessMethodStreamAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileACKAccessMethodStreamAccess#> .
@prefix AtomicReadFileRequest: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileRequest#> .
@prefix AtomicReadFileRequestAccessMethodChoice: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileRequestAccessMethodChoice#> .
@prefix AtomicReadFileRequestAccessMethodChoiceRecordAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileRequestAccessMethodChoiceRecordAccess#> .
@prefix AtomicReadFileRequestAccessMethodChoiceStreamAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicReadFileRequestAccessMethodChoiceStreamAccess#> .
@prefix AtomicWriteFileACK: <http://bacowl.sourceforge.net/2012/bacnet/AtomicWriteFileACK#> .
@prefix AtomicWriteFileRequest: <http://bacowl.sourceforge.net/2012/bacnet/AtomicWriteFileRequest#> .
@prefix AtomicWriteFileRequestAccessMethodChoice: <http://bacowl.sourceforge.net/2012/bacnet/AtomicWriteFileRequestAccessMethodChoice#> .
@prefix AtomicWriteFileRequestAccessMethodChoiceRecordAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicWriteFileRequestAccessMethodChoiceRecordAccess#> .
@prefix AtomicWriteFileRequestAccessMethodChoiceStreamAccess: <http://bacowl.sourceforge.net/2012/bacnet/AtomicWriteFileRequestAccessMethodChoiceStreamAccess#> .
@prefix AuthenticateACK: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticateACK#> .
@prefix AuthenticateRequest: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticateRequest#> .
@prefix AuthenticationFactor: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationFactor#> .
@prefix AuthenticationFactorFormat: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationFactorFormat#> .
@prefix AuthenticationFactorType: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationFactorType#> .
@prefix AuthenticationPolicy: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationPolicy#> .
@prefix AuthenticationPolicyPolicy: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationPolicyPolicy#> .
@prefix AuthenticationStatus: <http://bacowl.sourceforge.net/2012/bacnet/AuthenticationStatus#> .
@prefix AuthorizationException: <http://bacowl.sourceforge.net/2012/bacnet/AuthorizationException#> .
@prefix AuthorizationMode: <http://bacowl.sourceforge.net/2012/bacnet/AuthorizationMode#> .
@prefix AveragingObject: <http://bacowl.sourceforge.net/2012/bacnet/AveragingObject#> .
@prefix BACnet: <http://bacowl.sourceforge.net/2012/bacnet#> .
@prefix BackupState: <http://bacowl.sourceforge.net/2012/bacnet/BackupState#> .
@prefix BinaryInputObject: <http://bacowl.sourceforge.net/2012/bacnet/BinaryInputObject#> .
@prefix BinaryOutputObject: <http://bacowl.sourceforge.net/2012/bacnet/BinaryOutputObject#> .
@prefix BinaryPV: <http://bacowl.sourceforge.net/2012/bacnet/BinaryPV#> .
@prefix BinaryValueObject: <http://bacowl.sourceforge.net/2012/bacnet/BinaryValueObject#> .
@prefix Bit: <http://bacowl.sourceforge.net/2012/bacnet/Bit#> .
@prefix BitStringValueObject: <http://bacowl.sourceforge.net/2012/bacnet/BitStringValueObject#> .
@prefix COVNotificationParameters: <http://bacowl.sourceforge.net/2012/bacnet/COVNotificationParameters#> .
@prefix COVSubscription: <http://bacowl.sourceforge.net/2012/bacnet/COVSubscription#> .
@prefix CalendarEntry: <http://bacowl.sourceforge.net/2012/bacnet/CalendarEntry#> .
@prefix CalendarObject: <http://bacowl.sourceforge.net/2012/bacnet/CalendarObject#> .
@prefix ChangeListError: <http://bacowl.sourceforge.net/2012/bacnet/ChangeListError#> .
@prefix ChannelValue: <http://bacowl.sourceforge.net/2012/bacnet/ChannelValue#> .
@prefix CharacterStringValueObject: <http://bacowl.sourceforge.net/2012/bacnet/CharacterStringValueObject#> .
@prefix ClientCOV: <http://bacowl.sourceforge.net/2012/bacnet/ClientCOV#> .
@prefix CommandObject: <http://bacowl.sourceforge.net/2012/bacnet/CommandObject#> .
@prefix ConfirmedCOVNotificationRequest: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedCOVNotificationRequest#> .
@prefix ConfirmedEventNotificationRequest: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedEventNotificationRequest#> .
@prefix ConfirmedPrivateTransferACK: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedPrivateTransferACK#> .
@prefix ConfirmedPrivateTransferError: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedPrivateTransferError#> .
@prefix ConfirmedPrivateTransferRequest: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedPrivateTransferRequest#> .
@prefix ConfirmedServiceChoice: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedServiceChoice#> .
@prefix ConfirmedTextMessageRequest: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedTextMessageRequest#> .
@prefix ConfirmedTextMessageRequestMessageClass: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedTextMessageRequestMessageClass#> .
@prefix ConfirmedTextMessageRequestMessagePriority: <http://bacowl.sourceforge.net/2012/bacnet/ConfirmedTextMessageRequestMessagePriority#> .
@prefix CreateObjectACK: <http://bacowl.sourceforge.net/2012/bacnet/CreateObjectACK#> .
@prefix CreateObjectError: <http://bacowl.sourceforge.net/2012/bacnet/CreateObjectError#> .
@prefix CreateObjectRequest: <http://bacowl.sourceforge.net/2012/bacnet/CreateObjectRequest#> .
@prefix CreateObjectRequestObjectSpecifier: <http://bacowl.sourceforge.net/2012/bacnet/CreateObjectRequestObjectSpecifier#> .
@prefix CredentialAuthenticationFactor: <http://bacowl.sourceforge.net/2012/bacnet/CredentialAuthenticationFactor#> .
@prefix CredentialDataInputObject: <http://bacowl.sourceforge.net/2012/bacnet/CredentialDataInputObject#> .
@prefix DailySchedule: <http://bacowl.sourceforge.net/2012/bacnet/DailySchedule#> .
@prefix DatePatternValueObject: <http://bacowl.sourceforge.net/2012/bacnet/DatePatternValueObject#> .
@prefix DateRange: <http://bacowl.sourceforge.net/2012/bacnet/DateRange#> .
@prefix DateTime: <http://bacowl.sourceforge.net/2012/bacnet/DateTime#> .
@prefix DateTimePatternValueObject: <http://bacowl.sourceforge.net/2012/bacnet/DateTimePatternValueObject#> .
@prefix DateTimeValueObject: <http://bacowl.sourceforge.net/2012/bacnet/DateTimeValueObject#> .
@prefix DateValueObject: <http://bacowl.sourceforge.net/2012/bacnet/DateValueObject#> .
@prefix DaysOfWeek: <http://bacowl.sourceforge.net/2012/bacnet/DaysOfWeek#> .
@prefix DeleteObjectRequest: <http://bacowl.sourceforge.net/2012/bacnet/DeleteObjectRequest#> .
@prefix Destination: <http://bacowl.sourceforge.net/2012/bacnet/Destination#> .
@prefix DeviceAddress: <http://bacowl.sourceforge.net/2012/bacnet/DeviceAddress#> .
@prefix DeviceCommunicationControlRequest: <http://bacowl.sourceforge.net/2012/bacnet/DeviceCommunicationControlRequest#> .
@prefix DeviceCommunicationControlRequestEnableDisable: <http://bacowl.sourceforge.net/2012/bacnet/DeviceCommunicationControlRequestEnableDisable#> .
@prefix DeviceObject: <http://bacowl.sourceforge.net/2012/bacnet/DeviceObject#> .
@prefix DeviceObjectPropertyReference: <http://bacowl.sourceforge.net/2012/bacnet/DeviceObjectPropertyReference#> .
@prefix DeviceObjectPropertyValue: <http://bacowl.sourceforge.net/2012/bacnet/DeviceObjectPropertyValue#> .
@prefix DeviceObjectReference: <http://bacowl.sourceforge.net/2012/bacnet/DeviceObjectReference#> .
@prefix DeviceStatus: <http://bacowl.sourceforge.net/2012/bacnet/DeviceStatus#> .
@prefix DoorAlarmState: <http://bacowl.sourceforge.net/2012/bacnet/DoorAlarmState#> .
@prefix DoorSecuredStatus: <http://bacowl.sourceforge.net/2012/bacnet/DoorSecuredStatus#> .
@prefix DoorStatus: <http://bacowl.sourceforge.net/2012/bacnet/DoorStatus#> .
@prefix DoorValue: <http://bacowl.sourceforge.net/2012/bacnet/DoorValue#> .
@prefix Element: <http://bacowl.sourceforge.net/2012/bacnet/Element#> .
@prefix EngineeringUnits: <http://bacowl.sourceforge.net/2012/bacnet/EngineeringUnits#> .
@prefix Enumerated: <http://bacowl.sourceforge.net/2012/bacnet/Enumerated#> .
@prefix Error: <http://bacowl.sourceforge.net/2012/bacnet/Error#> .
@prefix ErrorClass: <http://bacowl.sourceforge.net/2012/bacnet/ErrorClass#> .
@prefix ErrorCode: <http://bacowl.sourceforge.net/2012/bacnet/ErrorCode#> .
@prefix ErrorType: <http://bacowl.sourceforge.net/2012/bacnet/ErrorType#> .
@prefix EventEnrollmentObject: <http://bacowl.sourceforge.net/2012/bacnet/EventEnrollmentObject#> .
@prefix EventLogObject: <http://bacowl.sourceforge.net/2012/bacnet/EventLogObject#> .
@prefix EventLogRecord: <http://bacowl.sourceforge.net/2012/bacnet/EventLogRecord#> .
@prefix EventLogRecordLogDatum: <http://bacowl.sourceforge.net/2012/bacnet/EventLogRecordLogDatum#> .
@prefix EventNotificationParameters: <http://bacowl.sourceforge.net/2012/bacnet/EventNotificationParameters#> .
@prefix EventParameter: <http://bacowl.sourceforge.net/2012/bacnet/EventParameter#> .
@prefix EventParameterAccessEvent: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterAccessEvent#> .
@prefix EventParameterAccessEventAccessEvent: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterAccessEventAccessEvent#> .
@prefix EventParameterBufferReady: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterBufferReady#> .
@prefix EventParameterChangeOfBitstring: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfBitstring#> .
@prefix EventParameterChangeOfCharacterString: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfCharacterString#> .
@prefix EventParameterChangeOfLifeSafety: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfLifeSafety#> .
@prefix EventParameterChangeOfState: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfState#> .
@prefix EventParameterChangeOfStatusFlags: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfStatusFlags#> .
@prefix EventParameterChangeOfValue: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfValue#> .
@prefix EventParameterChangeOfValueCOVCriteria: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterChangeOfValueCOVCriteria#> .
@prefix EventParameterCommandFailure: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterCommandFailure#> .
@prefix EventParameterDoubleOutOfRange: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterDoubleOutOfRange#> .
@prefix EventParameterExtended: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterExtended#> .
@prefix EventParameterExtendedParameters: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterExtendedParameters#> .
@prefix EventParameterFloatingLimit: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterFloatingLimit#> .
@prefix EventParameterOutOfRange: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterOutOfRange#> .
@prefix EventParameterSignedOutOfRange: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterSignedOutOfRange#> .
@prefix EventParameterUnsignedOutOfRange: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterUnsignedOutOfRange#> .
@prefix EventParameterUnsignedRange: <http://bacowl.sourceforge.net/2012/bacnet/EventParameterUnsignedRange#> .
@prefix EventState: <http://bacowl.sourceforge.net/2012/bacnet/EventState#> .
@prefix EventTransitionBits: <http://bacowl.sourceforge.net/2012/bacnet/EventTransitionBits#> .
@prefix EventType: <http://bacowl.sourceforge.net/2012/bacnet/EventType#> .
@prefix FileAccessMethod: <http://bacowl.sourceforge.net/2012/bacnet/FileAccessMethod#> .
@prefix FileObject: <http://bacowl.sourceforge.net/2012/bacnet/FileObject#> .
@prefix GetAlarmSummaryACK: <http://bacowl.sourceforge.net/2012/bacnet/GetAlarmSummaryACK#> .
@prefix GetAlarmSummaryAlarmSummary: <http://bacowl.sourceforge.net/2012/bacnet/GetAlarmSummaryAlarmSummary#> .
@prefix GetAlarmSummaryRequest: <http://bacowl.sourceforge.net/2012/bacnet/GetAlarmSummaryRequest#> .
@prefix GetEnrollmentSummaryACK: <http://bacowl.sourceforge.net/2012/bacnet/GetEnrollmentSummaryACK#> .
@prefix GetEnrollmentSummaryEnrollmentSummary: <http://bacowl.sourceforge.net/2012/bacnet/GetEnrollmentSummaryEnrollmentSummary#> .
@prefix GetEnrollmentSummaryRequest: <http://bacowl.sourceforge.net/2012/bacnet/GetEnrollmentSummaryRequest#> .
@prefix GetEnrollmentSummaryRequestAcknowledgmentFilterType: <http://bacowl.sourceforge.net/2012/bacnet/GetEnrollmentSummaryRequestAcknowledgmentFilterType#> .
@prefix GetEnrollmentSummaryRequestEventStateFilterType: <http://bacowl.sourceforge.net/2012/bacnet/GetEnrollmentSummaryRequestEventStateFilterType#> .
@prefix GetEventInformationACK: <http://bacowl.sourceforge.net/2012/bacnet/GetEventInformationACK#> .
@prefix GetEventInformationEventSummary: <http://bacowl.sourceforge.net/2012/bacnet/GetEventInformationEventSummary#> .
@prefix GetEventInformationRequest: <http://bacowl.sourceforge.net/2012/bacnet/GetEventInformationRequest#> .
@prefix GlobalGroupObject: <http://bacowl.sourceforge.net/2012/bacnet/GlobalGroupObject#> .
@prefix GroupChannelValue: <http://bacowl.sourceforge.net/2012/bacnet/GroupChannelValue#> .
@prefix GroupObject: <http://bacowl.sourceforge.net/2012/bacnet/GroupObject#> .
@prefix IAmRequest: <http://bacowl.sourceforge.net/2012/bacnet/IAmRequest#> .
@prefix IHaveRequest: <http://bacowl.sourceforge.net/2012/bacnet/IHaveRequest#> .
@prefix IntegerValueObject: <http://bacowl.sourceforge.net/2012/bacnet/IntegerValueObject#> .
@prefix KeyIdentifier: <http://bacowl.sourceforge.net/2012/bacnet/KeyIdentifier#> .
@prefix LargeAnalogValueObject: <http://bacowl.sourceforge.net/2012/bacnet/LargeAnalogValueObject#> .
@prefix LifeSafetyMode: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyMode#> .
@prefix LifeSafetyOperation: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyOperation#> .
@prefix LifeSafetyOperationRequest: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyOperationRequest#> .
@prefix LifeSafetyPointObject: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyPointObject#> .
@prefix LifeSafetyState: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyState#> .
@prefix LifeSafetyZoneObject: <http://bacowl.sourceforge.net/2012/bacnet/LifeSafetyZoneObject#> .
@prefix LightingInProgress: <http://bacowl.sourceforge.net/2012/bacnet/LightingInProgress#> .
@prefix LightingOperation: <http://bacowl.sourceforge.net/2012/bacnet/LightingOperation#> .
@prefix LightingTransition: <http://bacowl.sourceforge.net/2012/bacnet/LightingTransition#> .
@prefix LimitEnable: <http://bacowl.sourceforge.net/2012/bacnet/LimitEnable#> .
@prefix LoadControlObject: <http://bacowl.sourceforge.net/2012/bacnet/LoadControlObject#> .
@prefix LockStatus: <http://bacowl.sourceforge.net/2012/bacnet/LockStatus#> .
@prefix LogData: <http://bacowl.sourceforge.net/2012/bacnet/LogData#> .
@prefix LogDataLogData: <http://bacowl.sourceforge.net/2012/bacnet/LogDataLogData#> .
@prefix LogMultipleRecord: <http://bacowl.sourceforge.net/2012/bacnet/LogMultipleRecord#> .
@prefix LogRecord: <http://bacowl.sourceforge.net/2012/bacnet/LogRecord#> .
@prefix LogRecordLogDatum: <http://bacowl.sourceforge.net/2012/bacnet/LogRecordLogDatum#> .
@prefix LogStatus: <http://bacowl.sourceforge.net/2012/bacnet/LogStatus#> .
@prefix LoggingType: <http://bacowl.sourceforge.net/2012/bacnet/LoggingType#> .
@prefix LoopObject: <http://bacowl.sourceforge.net/2012/bacnet/LoopObject#> .
@prefix Maintenance: <http://bacowl.sourceforge.net/2012/bacnet/Maintenance#> .
@prefix MultiStateInputObject: <http://bacowl.sourceforge.net/2012/bacnet/MultiStateInputObject#> .
@prefix MultiStateOutputObject: <http://bacowl.sourceforge.net/2012/bacnet/MultiStateOutputObject#> .
@prefix MultiStateValueObject: <http://bacowl.sourceforge.net/2012/bacnet/MultiStateValueObject#> .
@prefix NetworkSecurityObject: <http://bacowl.sourceforge.net/2012/bacnet/NetworkSecurityObject#> .
@prefix NetworkSecurityPolicy: <http://bacowl.sourceforge.net/2012/bacnet/NetworkSecurityPolicy#> .
@prefix NodeType: <http://bacowl.sourceforge.net/2012/bacnet/NodeType#> .
@prefix NotificationClassObject: <http://bacowl.sourceforge.net/2012/bacnet/NotificationClassObject#> .
@prefix NotificationParameters: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParameters#> .
@prefix NotificationParametersAccessEventType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersAccessEventType#> .
@prefix NotificationParametersBufferReady: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersBufferReady#> .
@prefix NotificationParametersChangeOfBitstring: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfBitstring#> .
@prefix NotificationParametersChangeOfCharacterStringType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfCharacterStringType#> .
@prefix NotificationParametersChangeOfLifeSafety: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfLifeSafety#> .
@prefix NotificationParametersChangeOfState: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfState#> .
@prefix NotificationParametersChangeOfStatusFlagsType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfStatusFlagsType#> .
@prefix NotificationParametersChangeOfValue: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfValue#> .
@prefix NotificationParametersChangeOfValueNewValue: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersChangeOfValueNewValue#> .
@prefix NotificationParametersCommandFailure: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersCommandFailure#> .
@prefix NotificationParametersComplexEventType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersComplexEventType#> .
@prefix NotificationParametersDoubleOutOfRangeType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersDoubleOutOfRangeType#> .
@prefix NotificationParametersExtended: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersExtended#> .
@prefix NotificationParametersExtendedParametersType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersExtendedParametersType#> .
@prefix NotificationParametersFloatingLimit: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersFloatingLimit#> .
@prefix NotificationParametersOutOfRange: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersOutOfRange#> .
@prefix NotificationParametersSignedOutOfRangeType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersSignedOutOfRangeType#> .
@prefix NotificationParametersUnsignedOutOfRangeType: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersUnsignedOutOfRangeType#> .
@prefix NotificationParametersUnsignedRange: <http://bacowl.sourceforge.net/2012/bacnet/NotificationParametersUnsignedRange#> .
@prefix NotifyType: <http://bacowl.sourceforge.net/2012/bacnet/NotifyType#> .
@prefix Null: <http://bacowl.sourceforge.net/2012/bacnet/Null#> .
@prefix Object: <http://bacowl.sourceforge.net/2012/bacnet/Object#> .
@prefix ObjectIdentifier: <http://bacowl.sourceforge.net/2012/bacnet/ObjectIdentifier#> .
@prefix ObjectPropertyReference: <http://bacowl.sourceforge.net/2012/bacnet/ObjectPropertyReference#> .
@prefix ObjectPropertyValue: <http://bacowl.sourceforge.net/2012/bacnet/ObjectPropertyValue#> .
@prefix ObjectType: <http://bacowl.sourceforge.net/2012/bacnet/ObjectType#> .
@prefix ObjectTypesSupported: <http://bacowl.sourceforge.net/2012/bacnet/ObjectTypesSupported#> .
@prefix OctetStringValueObject: <http://bacowl.sourceforge.net/2012/bacnet/OctetStringValueObject#> .
@prefix OptionalCharacterString: <http://bacowl.sourceforge.net/2012/bacnet/OptionalCharacterString#> .
@prefix Polarity: <http://bacowl.sourceforge.net/2012/bacnet/Polarity#> .
@prefix PositiveIntegerValueObject: <http://bacowl.sourceforge.net/2012/bacnet/PositiveIntegerValueObject#> .
@prefix Prescale: <http://bacowl.sourceforge.net/2012/bacnet/Prescale#> .
@prefix PriorityValue: <http://bacowl.sourceforge.net/2012/bacnet/PriorityValue#> .
@prefix ProgramError: <http://bacowl.sourceforge.net/2012/bacnet/ProgramError#> .
@prefix ProgramObject: <http://bacowl.sourceforge.net/2012/bacnet/ProgramObject#> .
@prefix ProgramRequest: <http://bacowl.sourceforge.net/2012/bacnet/ProgramRequest#> .
@prefix ProgramState: <http://bacowl.sourceforge.net/2012/bacnet/ProgramState#> .
@prefix Property: <http://bacowl.sourceforge.net/2012/bacnet/Property#> .
@prefix PropertyAccessResult: <http://bacowl.sourceforge.net/2012/bacnet/PropertyAccessResult#> .
@prefix PropertyAccessResultAccessResult: <http://bacowl.sourceforge.net/2012/bacnet/PropertyAccessResultAccessResult#> .
@prefix PropertyIdentifier: <http://bacowl.sourceforge.net/2012/bacnet/PropertyIdentifier#> .
@prefix PropertyReference: <http://bacowl.sourceforge.net/2012/bacnet/PropertyReference#> .
@prefix PropertyStates: <http://bacowl.sourceforge.net/2012/bacnet/PropertyStates#> .
@prefix PropertyValue: <http://bacowl.sourceforge.net/2012/bacnet/PropertyValue#> .
@prefix PulseConverterObject: <http://bacowl.sourceforge.net/2012/bacnet/PulseConverterObject#> .
@prefix Range: <http://bacowl.sourceforge.net/2012/bacnet/Range#> .
@prefix RangeByPosition: <http://bacowl.sourceforge.net/2012/bacnet/RangeByPosition#> .
@prefix RangeBySequenceNumber: <http://bacowl.sourceforge.net/2012/bacnet/RangeBySequenceNumber#> .
@prefix RangeByTime: <http://bacowl.sourceforge.net/2012/bacnet/RangeByTime#> .
@prefix ReadAccessResult: <http://bacowl.sourceforge.net/2012/bacnet/ReadAccessResult#> .
@prefix ReadAccessResultElement: <http://bacowl.sourceforge.net/2012/bacnet/ReadAccessResultElement#> .
@prefix ReadAccessResultElementChoice: <http://bacowl.sourceforge.net/2012/bacnet/ReadAccessResultElementChoice#> .
@prefix ReadAccessSpecification: <http://bacowl.sourceforge.net/2012/bacnet/ReadAccessSpecification#> .
@prefix ReadPropertyACK: <http://bacowl.sourceforge.net/2012/bacnet/ReadPropertyACK#> .
@prefix ReadPropertyMultipleACK: <http://bacowl.sourceforge.net/2012/bacnet/ReadPropertyMultipleACK#> .
@prefix ReadPropertyMultipleRequest: <http://bacowl.sourceforge.net/2012/bacnet/ReadPropertyMultipleRequest#> .
@prefix ReadPropertyRequest: <http://bacowl.sourceforge.net/2012/bacnet/ReadPropertyRequest#> .
@prefix ReadRangeACK: <http://bacowl.sourceforge.net/2012/bacnet/ReadRangeACK#> .
@prefix ReadRangeRequest: <http://bacowl.sourceforge.net/2012/bacnet/ReadRangeRequest#> .
@prefix Recipient: <http://bacowl.sourceforge.net/2012/bacnet/Recipient#> .
@prefix RecipientProcess: <http://bacowl.sourceforge.net/2012/bacnet/RecipientProcess#> .
@prefix ReinitializeDeviceRequest: <http://bacowl.sourceforge.net/2012/bacnet/ReinitializeDeviceRequest#> .
@prefix ReinitializeDeviceRequestReinitializedStateOfDevice: <http://bacowl.sourceforge.net/2012/bacnet/ReinitializeDeviceRequestReinitializedStateOfDevice#> .
@prefix RejectPDU: <http://bacowl.sourceforge.net/2012/bacnet/RejectPDU#> .
@prefix RejectReason: <http://bacowl.sourceforge.net/2012/bacnet/RejectReason#> .
@prefix Reliability: <http://bacowl.sourceforge.net/2012/bacnet/Reliability#> .
@prefix RemoveListElementRequest: <http://bacowl.sourceforge.net/2012/bacnet/RemoveListElementRequest#> .
@prefix RequestKeyRequest: <http://bacowl.sourceforge.net/2012/bacnet/RequestKeyRequest#> .
@prefix RestartReason: <http://bacowl.sourceforge.net/2012/bacnet/RestartReason#> .
@prefix ResultFlags: <http://bacowl.sourceforge.net/2012/bacnet/ResultFlags#> .
@prefix Scale: <http://bacowl.sourceforge.net/2012/bacnet/Scale#> .
@prefix ScheduleObject: <http://bacowl.sourceforge.net/2012/bacnet/ScheduleObject#> .
@prefix SecurityKeySet: <http://bacowl.sourceforge.net/2012/bacnet/SecurityKeySet#> .
@prefix SecurityLevel: <http://bacowl.sourceforge.net/2012/bacnet/SecurityLevel#> .
@prefix SecurityPolicy: <http://bacowl.sourceforge.net/2012/bacnet/SecurityPolicy#> .
@prefix Segmentation: <http://bacowl.sourceforge.net/2012/bacnet/Segmentation#> .
@prefix Sequence: <http://bacowl.sourceforge.net/2012/bacnet/Sequence#> .
@prefix SequenceElement: <http://bacowl.sourceforge.net/2012/bacnet/SequenceElement#> .
@prefix SequenceOf: <http://bacowl.sourceforge.net/2012/bacnet/SequenceOf#> .
@prefix ServicesSupported: <http://bacowl.sourceforge.net/2012/bacnet/ServicesSupported#> .
@prefix SetpointReference: <http://bacowl.sourceforge.net/2012/bacnet/SetpointReference#> .
@prefix ShedLevel: <http://bacowl.sourceforge.net/2012/bacnet/ShedLevel#> .
@prefix ShedState: <http://bacowl.sourceforge.net/2012/bacnet/ShedState#> .
@prefix SilencedState: <http://bacowl.sourceforge.net/2012/bacnet/SilencedState#> .
@prefix SpecialEvent: <http://bacowl.sourceforge.net/2012/bacnet/SpecialEvent#> .
@prefix SpecialEventPeriod: <http://bacowl.sourceforge.net/2012/bacnet/SpecialEventPeriod#> .
@prefix StatusFlags: <http://bacowl.sourceforge.net/2012/bacnet/StatusFlags#> .
@prefix StructuredViewObject: <http://bacowl.sourceforge.net/2012/bacnet/StructuredViewObject#> .
@prefix SubscribeCOVPropertyRequest: <http://bacowl.sourceforge.net/2012/bacnet/SubscribeCOVPropertyRequest#> .
@prefix SubscribeCOVRequest: <http://bacowl.sourceforge.net/2012/bacnet/SubscribeCOVRequest#> .
@prefix TimePatternValueObject: <http://bacowl.sourceforge.net/2012/bacnet/TimePatternValueObject#> .
@prefix TimeStamp: <http://bacowl.sourceforge.net/2012/bacnet/TimeStamp#> .
@prefix TimeSynchronizationRequest: <http://bacowl.sourceforge.net/2012/bacnet/TimeSynchronizationRequest#> .
@prefix TimeValue: <http://bacowl.sourceforge.net/2012/bacnet/TimeValue#> .
@prefix TimeValueObject: <http://bacowl.sourceforge.net/2012/bacnet/TimeValueObject#> .
@prefix TrendLogMultipleObject: <http://bacowl.sourceforge.net/2012/bacnet/TrendLogMultipleObject#> .
@prefix TrendLogObject: <http://bacowl.sourceforge.net/2012/bacnet/TrendLogObject#> .
@prefix UTCTimeSynchronizationRequest: <http://bacowl.sourceforge.net/2012/bacnet/UTCTimeSynchronizationRequest#> .
@prefix UnconfirmedCOVNotificationRequest: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedCOVNotificationRequest#> .
@prefix UnconfirmedEventNotificationRequest: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedEventNotificationRequest#> .
@prefix UnconfirmedPrivateTransferRequest: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedPrivateTransferRequest#> .
@prefix UnconfirmedServiceChoice: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedServiceChoice#> .
@prefix UnconfirmedTextMessageRequest: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedTextMessageRequest#> .
@prefix UnconfirmedTextMessageRequestMessageClass: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedTextMessageRequestMessageClass#> .
@prefix UnconfirmedTextMessageRequestMessagePriority: <http://bacowl.sourceforge.net/2012/bacnet/UnconfirmedTextMessageRequestMessagePriority#> .
@prefix VTClass: <http://bacowl.sourceforge.net/2012/bacnet/VTClass#> .
@prefix VTCloseError: <http://bacowl.sourceforge.net/2012/bacnet/VTCloseError#> .
@prefix VTCloseRequest: <http://bacowl.sourceforge.net/2012/bacnet/VTCloseRequest#> .
@prefix VTDataACK: <http://bacowl.sourceforge.net/2012/bacnet/VTDataACK#> .
@prefix VTDataRequest: <http://bacowl.sourceforge.net/2012/bacnet/VTDataRequest#> .
@prefix VTOpenACK: <http://bacowl.sourceforge.net/2012/bacnet/VTOpenACK#> .
@prefix VTOpenRequest: <http://bacowl.sourceforge.net/2012/bacnet/VTOpenRequest#> .
@prefix VTSession: <http://bacowl.sourceforge.net/2012/bacnet/VTSession#> .
@prefix Vendor: <http://bacowl.sourceforge.net/2012/bacnet/Vendor#> .
@prefix WhoHasLimits: <http://bacowl.sourceforge.net/2012/bacnet/WhoHasLimits#> .
@prefix WhoHasObject: <http://bacowl.sourceforge.net/2012/bacnet/WhoHasObject#> .
@prefix WhoHasRequest: <http://bacowl.sourceforge.net/2012/bacnet/WhoHasRequest#> .
@prefix WhoIsRequest: <http://bacowl.sourceforge.net/2012/bacnet/WhoIsRequest#> .
@prefix WriteAccessSpecification: <http://bacowl.sourceforge.net/2012/bacnet/WriteAccessSpecification#> .
@prefix WriteGroupRequest: <http://bacowl.sourceforge.net/2012/bacnet/WriteGroupRequest#> .
@prefix WritePropertyMultipleError: <http://bacowl.sourceforge.net/2012/bacnet/WritePropertyMultipleError#> .
@prefix WritePropertyMultipleRequest: <http://bacowl.sourceforge.net/2012/bacnet/WritePropertyMultipleRequest#> .
@prefix WritePropertyRequest: <http://bacowl.sourceforge.net/2012/bacnet/WritePropertyRequest#> .
@prefix WriteStatus: <http://bacowl.sourceforge.net/2012/bacnet/WriteStatus#> .
@prefix bacnet: <http://purl.org/wot-catalogue/bacnet#> .
@prefix ble: <http://purl.org/wot-catalogue/ble#> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix haim: <http://purl.org/wot-catalogue/onem2m/haim#> .
@prefix hgi: <http://homegatewayinitiative.org/xml/dal/3.0> .
@prefix httpList: <http://plugins.linkedpipes.com/ontology/e-httpGetFiles#> .
@prefix ocf: <http://purl.org/wot-catalogue/ocf#> .
@prefix onem2m: <http://purl.org/wot-catalogue/onem2m#> .
@prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xs: <http://www.w3.org/2001/XMLSchema> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bacnet:AccessCredentialObject a skos:Concept;
  skos:altLabel "access credential object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessCredentialObject";
  skos:related bacnet:AccessCredentialObjectabsenteeLimit, bacnet:AccessCredentialObjectactivationTime,
    bacnet:AccessCredentialObjectassignedAccessRights, bacnet:AccessCredentialObjectauthenticationFactors,
    bacnet:AccessCredentialObjectbelongsTo, bacnet:AccessCredentialObjectcredentialDisable,
    bacnet:AccessCredentialObjectcredentialStatus, bacnet:AccessCredentialObjectdaysRemaining,
    bacnet:AccessCredentialObjectexpiryTime, bacnet:AccessCredentialObjectextendedTimeEnable,
    bacnet:AccessCredentialObjectglobalIdentifier, bacnet:AccessCredentialObjectlastAccessEvent,
    bacnet:AccessCredentialObjectlastAccessPoint, bacnet:AccessCredentialObjectlastUseTime,
    bacnet:AccessCredentialObjectmasterExemption, bacnet:AccessCredentialObjectoccupancyExemption,
    bacnet:AccessCredentialObjectpassbackExemption, bacnet:AccessCredentialObjectreasonForDisable,
    bacnet:AccessCredentialObjectreliability, bacnet:AccessCredentialObjectstatusFlags,
    bacnet:AccessCredentialObjectthreatAuthority, bacnet:AccessCredentialObjecttraceFlag,
    bacnet:AccessCredentialObjectusesRemaining .

bacnet:AccessCredentialObjecttraceFlag a skos:Concept;
  skos:altLabel "trace flag";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "traceFlag";
  skos:related xsd:boolean .

bacnet:AccessCredentialObjectextendedTimeEnable a skos:Concept;
  skos:altLabel "extended time enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "extendedTimeEnable";
  skos:related xsd:boolean .

bacnet:AccessCredentialObjectmasterExemption a skos:Concept;
  skos:altLabel "master exemption";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "masterExemption";
  skos:related xsd:boolean .

bacnet:AccessCredentialObjectpassbackExemption a skos:Concept;
  skos:altLabel "passback exemption";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "passbackExemption";
  skos:related xsd:boolean .

bacnet:AccessCredentialObjectoccupancyExemption a skos:Concept;
  skos:altLabel "occupancy exemption";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyExemption";
  skos:related xsd:boolean .

bacnet:AccessCredentialObjectglobalIdentifier a skos:Concept;
  skos:altLabel "global identifier";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "globalIdentifier";
  skos:related xsd:unsignedLong .

bacnet:AccessCredentialObjectabsenteeLimit a skos:Concept;
  skos:altLabel "absentee limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "absenteeLimit";
  skos:related xsd:unsignedLong .

bacnet:AccessCredentialObjectdaysRemaining a skos:Concept;
  skos:altLabel "days remaining";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "daysRemaining";
  skos:related xsd:long .

bacnet:AccessCredentialObjectusesRemaining a skos:Concept;
  skos:altLabel "uses remaining";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "usesRemaining";
  skos:related xsd:long .

bacnet:AccessCredentialObjectcredentialDisable a skos:Concept;
  skos:altLabel "credential disable";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "credentialDisable";
  skos:related bacnet:AccessCredentialDisable .

bacnet:AccessCredentialObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessCredentialObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessCredentialObjectcredentialStatus a skos:Concept;
  skos:altLabel "credential status";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "credentialStatus";
  skos:related bacnet:BinaryPV .

bacnet:AccessCredentialObjectreasonForDisable a skos:Concept;
  skos:altLabel "reason for disable";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reasonForDisable";
  skos:related bacnet:SequenceOfAccessCredentialDisableReason .

bacnet:AccessCredentialObjectauthenticationFactors a skos:Concept;
  skos:altLabel "authentication factors";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "authenticationFactors";
  skos:related bacnet:ArrayOfCredentialAuthenticationFactor .

bacnet:AccessCredentialObjectactivationTime a skos:Concept;
  skos:altLabel "activation time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activationTime";
  skos:related bacnet:DateTime .

bacnet:AccessCredentialObjectexpiryTime a skos:Concept;
  skos:altLabel "expiry time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "expiryTime";
  skos:related bacnet:DateTime .

bacnet:AccessCredentialObjectlastUseTime a skos:Concept;
  skos:altLabel "last use time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastUseTime";
  skos:related bacnet:DateTime .

bacnet:AccessCredentialObjectbelongsTo a skos:Concept;
  skos:altLabel "belongs to";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "belongsTo";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessCredentialObjectlastAccessPoint a skos:Concept;
  skos:altLabel "last access point";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastAccessPoint";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessCredentialObjectassignedAccessRights a skos:Concept;
  skos:altLabel "assigned access rights";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "assignedAccessRights";
  skos:related bacnet:ArrayOfAssignedAccessRights .

bacnet:AccessCredentialObjectlastAccessEvent a skos:Concept;
  skos:altLabel "last access event";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastAccessEvent";
  skos:related bacnet:AccessEvent .

bacnet:AccessCredentialObjectthreatAuthority a skos:Concept;
  skos:altLabel "threat authority";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "threatAuthority";
  skos:related bacnet:AccessThreatLevel .

bacnet:AccessDoorObject a skos:Concept;
  skos:altLabel "access door object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessDoorObject";
  skos:related bacnet:AccessDoorObjectackedTransitions, bacnet:AccessDoorObjectalarmValues,
    bacnet:AccessDoorObjectdoorAlarmState, bacnet:AccessDoorObjectdoorExtendedPulseTime,
    bacnet:AccessDoorObjectdoorMembers, bacnet:AccessDoorObjectdoorOpenTooLongTime, bacnet:AccessDoorObjectdoorPulseTime,
    bacnet:AccessDoorObjectdoorStatus, bacnet:AccessDoorObjectdoorUnlockDelayTime, bacnet:AccessDoorObjecteventEnable,
    bacnet:AccessDoorObjecteventMessageTexts, bacnet:AccessDoorObjecteventState, bacnet:AccessDoorObjecteventTimeStamps,
    bacnet:AccessDoorObjectfaultValues, bacnet:AccessDoorObjectlockStatus, bacnet:AccessDoorObjectmaintenanceRequired,
    bacnet:AccessDoorObjectmaskedAlarmValues, bacnet:AccessDoorObjectnotificationClass,
    bacnet:AccessDoorObjectnotifyType, bacnet:AccessDoorObjectoutOfService, bacnet:AccessDoorObjectpresentValue,
    bacnet:AccessDoorObjectpriorityArray, bacnet:AccessDoorObjectreliability, bacnet:AccessDoorObjectrelinquishDefault,
    bacnet:AccessDoorObjectsecuredStatus, bacnet:AccessDoorObjectstatusFlags, bacnet:AccessDoorObjecttimeDelay .

bacnet:AccessDoorObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AccessDoorObjectdoorPulseTime a skos:Concept;
  skos:altLabel "door pulse time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorPulseTime";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjectdoorExtendedPulseTime a skos:Concept;
  skos:altLabel "door extended pulse time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorExtendedPulseTime";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjectdoorUnlockDelayTime a skos:Concept;
  skos:altLabel "door unlock delay time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorUnlockDelayTime";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjectdoorOpenTooLongTime a skos:Concept;
  skos:altLabel "door open too long time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorOpenTooLongTime";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AccessDoorObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessDoorObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessDoorObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:DoorValue .

bacnet:AccessDoorObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:DoorValue .

bacnet:AccessDoorObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AccessDoorObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:AccessDoorObjectdoorStatus a skos:Concept;
  skos:altLabel "door status";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorStatus";
  skos:related bacnet:DoorStatus .

bacnet:AccessDoorObjectlockStatus a skos:Concept;
  skos:altLabel "lock status";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lockStatus";
  skos:related bacnet:LockStatus .

bacnet:AccessDoorObjectsecuredStatus a skos:Concept;
  skos:altLabel "secured status";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "securedStatus";
  skos:related bacnet:DoorSecuredStatus .

bacnet:AccessDoorObjectdoorMembers a skos:Concept;
  skos:altLabel "door members";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorMembers";
  skos:related bacnet:ArrayOfDeviceObjectReference .

bacnet:AccessDoorObjectdoorAlarmState a skos:Concept;
  skos:altLabel "door alarm state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "doorAlarmState";
  skos:related bacnet:DoorAlarmState .

bacnet:AccessDoorObjectmaskedAlarmValues a skos:Concept;
  skos:altLabel "masked alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maskedAlarmValues";
  skos:related bacnet:SequenceOfDoorAlarmState .

bacnet:AccessDoorObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfDoorAlarmState .

bacnet:AccessDoorObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:SequenceOfDoorAlarmState .

bacnet:AccessDoorObjectmaintenanceRequired a skos:Concept;
  skos:altLabel "maintenance required";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maintenanceRequired";
  skos:related bacnet:Maintenance .

bacnet:AccessDoorObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessDoorObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessDoorObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AccessDoorObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AccessDoorObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AccessPointObject a skos:Concept;
  skos:altLabel "access point object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessPointObject";
  skos:related bacnet:AccessPointObjectaccessAlarmEvents, bacnet:AccessPointObjectaccessDoors,
    bacnet:AccessPointObjectaccessEvent, bacnet:AccessPointObjectaccessEventAuthenticationFactor,
    bacnet:AccessPointObjectaccessEventCredential, bacnet:AccessPointObjectaccessEventTag,
    bacnet:AccessPointObjectaccessEventTime, bacnet:AccessPointObjectaccessTransactionEvents,
    bacnet:AccessPointObjectaccompanimentTime, bacnet:AccessPointObjectackedTransitions,
    bacnet:AccessPointObjectactiveAuthenticationPolicy, bacnet:AccessPointObjectauthenticationPolicyList,
    bacnet:AccessPointObjectauthenticationPolicyNames, bacnet:AccessPointObjectauthenticationStatus,
    bacnet:AccessPointObjectauthorizationMode, bacnet:AccessPointObjecteventEnable, bacnet:AccessPointObjecteventMessageTexts,
    bacnet:AccessPointObjecteventState, bacnet:AccessPointObjecteventTimeStamps, bacnet:AccessPointObjectfailedAttemptEvents,
    bacnet:AccessPointObjectfailedAttempts, bacnet:AccessPointObjectfailedAttemptsTime,
    bacnet:AccessPointObjectlockout, bacnet:AccessPointObjectlockoutRelinquishTime, bacnet:AccessPointObjectmaxFailedAttempts,
    bacnet:AccessPointObjectmusterPoint, bacnet:AccessPointObjectnotificationClass, bacnet:AccessPointObjectnotifyType,
    bacnet:AccessPointObjectnumberOfAuthenticationPolicies, bacnet:AccessPointObjectoccupancyCountAdjust,
    bacnet:AccessPointObjectoccupancyLowerLimitEnforced, bacnet:AccessPointObjectoccupancyUpperLimitEnforced,
    bacnet:AccessPointObjectoutOfService, bacnet:AccessPointObjectpriorityForWriting,
    bacnet:AccessPointObjectreliability, bacnet:AccessPointObjectstatusFlags, bacnet:AccessPointObjectthreatLevel,
    bacnet:AccessPointObjecttransactionNotificationClass, bacnet:AccessPointObjectverificationTime,
    bacnet:AccessPointObjectzoneFrom, bacnet:AccessPointObjectzoneTo .

bacnet:AccessPointObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AccessPointObjectlockout a skos:Concept;
  skos:altLabel "lockout";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lockout";
  skos:related xsd:boolean .

bacnet:AccessPointObjectoccupancyUpperLimitEnforced a skos:Concept;
  skos:altLabel "occupancy upper limit enforced";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyUpperLimitEnforced";
  skos:related xsd:boolean .

bacnet:AccessPointObjectoccupancyLowerLimitEnforced a skos:Concept;
  skos:altLabel "occupancy lower limit enforced";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyLowerLimitEnforced";
  skos:related xsd:boolean .

bacnet:AccessPointObjectoccupancyCountAdjust a skos:Concept;
  skos:altLabel "occupancy count adjust";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyCountAdjust";
  skos:related xsd:boolean .

bacnet:AccessPointObjectmusterPoint a skos:Concept;
  skos:altLabel "muster point";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "musterPoint";
  skos:related xsd:boolean .

bacnet:AccessPointObjectactiveAuthenticationPolicy a skos:Concept;
  skos:altLabel "active authentication policy";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeAuthenticationPolicy";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectnumberOfAuthenticationPolicies a skos:Concept;
  skos:altLabel "number of authentication policies";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "numberOfAuthenticationPolicies";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectverificationTime a skos:Concept;
  skos:altLabel "verification time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "verificationTime";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectlockoutRelinquishTime a skos:Concept;
  skos:altLabel "lockout relinquish time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lockoutRelinquishTime";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectfailedAttempts a skos:Concept;
  skos:altLabel "failed attempts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "failedAttempts";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectmaxFailedAttempts a skos:Concept;
  skos:altLabel "max failed attempts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxFailedAttempts";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectfailedAttemptsTime a skos:Concept;
  skos:altLabel "failed attempts time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "failedAttemptsTime";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectaccompanimentTime a skos:Concept;
  skos:altLabel "accompaniment time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accompanimentTime";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectaccessEventTag a skos:Concept;
  skos:altLabel "access event tag";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessEventTag";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectpriorityForWriting a skos:Concept;
  skos:altLabel "priority for writing";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityForWriting";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjecttransactionNotificationClass a skos:Concept;
  skos:altLabel "transaction notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "transactionNotificationClass";
  skos:related xsd:unsignedLong .

bacnet:AccessPointObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessPointObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessPointObjectaccessEventCredential a skos:Concept;
  skos:altLabel "access event credential";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessEventCredential";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessPointObjectzoneTo a skos:Concept;
  skos:altLabel "zone to";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "zoneTo";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessPointObjectzoneFrom a skos:Concept;
  skos:altLabel "zone from";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "zoneFrom";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessPointObjectaccessEvent a skos:Concept;
  skos:altLabel "access event";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessEvent";
  skos:related bacnet:AccessEvent .

bacnet:AccessPointObjectthreatLevel a skos:Concept;
  skos:altLabel "threat level";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "threatLevel";
  skos:related bacnet:AccessThreatLevel .

bacnet:AccessPointObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AccessPointObjectaccessDoors a skos:Concept;
  skos:altLabel "access doors";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessDoors";
  skos:related bacnet:ArrayOfDeviceObjectReference .

bacnet:AccessPointObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessPointObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessPointObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AccessPointObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AccessPointObjectauthenticationPolicyNames a skos:Concept;
  skos:altLabel "authentication policy names";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "authenticationPolicyNames";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AccessPointObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AccessPointObjectauthenticationStatus a skos:Concept;
  skos:altLabel "authentication status";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "authenticationStatus";
  skos:related bacnet:AuthenticationStatus .

bacnet:AccessPointObjectauthenticationPolicyList a skos:Concept;
  skos:altLabel "authentication policy list";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "authenticationPolicyList";
  skos:related bacnet:ArrayOfAuthenticationPolicy .

bacnet:AccessPointObjectauthorizationMode a skos:Concept;
  skos:altLabel "authorization mode";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "authorizationMode";
  skos:related bacnet:AuthorizationMode .

bacnet:AccessPointObjectfailedAttemptEvents a skos:Concept;
  skos:altLabel "failed attempt events";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "failedAttemptEvents";
  skos:related bacnet:SequenceOfAccessEvent .

bacnet:AccessPointObjectaccessAlarmEvents a skos:Concept;
  skos:altLabel "access alarm events";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessAlarmEvents";
  skos:related bacnet:SequenceOfAccessEvent .

bacnet:AccessPointObjectaccessTransactionEvents a skos:Concept;
  skos:altLabel "access transaction events";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessTransactionEvents";
  skos:related bacnet:SequenceOfAccessEvent .

bacnet:AccessPointObjectaccessEventTime a skos:Concept;
  skos:altLabel "access event time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessEventTime";
  skos:related bacnet:TimeStamp .

bacnet:AccessPointObjectaccessEventAuthenticationFactor a skos:Concept;
  skos:altLabel "access event authentication factor";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accessEventAuthenticationFactor";
  skos:related bacnet:AuthenticationFactor .

bacnet:AccessRightsObject a skos:Concept;
  skos:altLabel "access rights object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessRightsObject";
  skos:related bacnet:AccessRightsObjectaccompaniment, bacnet:AccessRightsObjectenable,
    bacnet:AccessRightsObjectglobalIdentifier, bacnet:AccessRightsObjectnegativeAccessRules,
    bacnet:AccessRightsObjectpositiveAccessRules, bacnet:AccessRightsObjectreliability,
    bacnet:AccessRightsObjectstatusFlags .

bacnet:AccessRightsObjectenable a skos:Concept;
  skos:altLabel "enable";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "enable";
  skos:related xsd:boolean .

bacnet:AccessRightsObjectglobalIdentifier a skos:Concept;
  skos:altLabel "global identifier";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "globalIdentifier";
  skos:related xsd:unsignedLong .

bacnet:AccessRightsObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessRightsObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessRightsObjectaccompaniment a skos:Concept;
  skos:altLabel "accompaniment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "accompaniment";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessRightsObjectnegativeAccessRules a skos:Concept;
  skos:altLabel "negative access rules";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "negativeAccessRules";
  skos:related bacnet:ArrayOfAccessRule .

bacnet:AccessRightsObjectpositiveAccessRules a skos:Concept;
  skos:altLabel "positive access rules";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "positiveAccessRules";
  skos:related bacnet:ArrayOfAccessRule .

bacnet:AccessUserObject a skos:Concept;
  skos:altLabel "access user object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessUserObject";
  skos:related bacnet:AccessUserObjectcredentials, bacnet:AccessUserObjectglobalIdentifier,
    bacnet:AccessUserObjectmemberOf, bacnet:AccessUserObjectmembers, bacnet:AccessUserObjectreliability,
    bacnet:AccessUserObjectstatusFlags, bacnet:AccessUserObjectuserExternalIdentifier,
    bacnet:AccessUserObjectuserInformationReference, bacnet:AccessUserObjectuserName,
    bacnet:AccessUserObjectuserType .

bacnet:AccessUserObjectglobalIdentifier a skos:Concept;
  skos:altLabel "global identifier";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "globalIdentifier";
  skos:related xsd:unsignedLong .

bacnet:AccessUserObjectuserName a skos:Concept;
  skos:altLabel "user name";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "userName";
  skos:related xsd:string .

bacnet:AccessUserObjectuserExternalIdentifier a skos:Concept;
  skos:altLabel "user external identifier";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "userExternalIdentifier";
  skos:related xsd:string .

bacnet:AccessUserObjectuserInformationReference a skos:Concept;
  skos:altLabel "user information reference";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "userInformationReference";
  skos:related xsd:string .

bacnet:AccessUserObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessUserObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessUserObjectuserType a skos:Concept;
  skos:altLabel "user type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "userType";
  skos:related bacnet:AccessUserType .

bacnet:AccessUserObjectmembers a skos:Concept;
  skos:altLabel "members";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "members";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessUserObjectmemberOf a skos:Concept;
  skos:altLabel "member of";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "memberOf";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessUserObjectcredentials a skos:Concept;
  skos:altLabel "credentials";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "credentials";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessZoneObject a skos:Concept;
  skos:altLabel "access zone object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccessZoneObject";
  skos:related bacnet:AccessZoneObjectackedTransitions, bacnet:AccessZoneObjectadjustValue,
    bacnet:AccessZoneObjectalarmValues, bacnet:AccessZoneObjectcredentialsInZone, bacnet:AccessZoneObjectentryPoints,
    bacnet:AccessZoneObjecteventEnable, bacnet:AccessZoneObjecteventMessageTexts, bacnet:AccessZoneObjecteventState,
    bacnet:AccessZoneObjecteventTimeStamps, bacnet:AccessZoneObjectexitPoints, bacnet:AccessZoneObjectglobalIdentifier,
    bacnet:AccessZoneObjectlastCredentialAdded, bacnet:AccessZoneObjectlastCredentialAddedTime,
    bacnet:AccessZoneObjectlastCredentialRemoved, bacnet:AccessZoneObjectlastCredentialRemovedTime,
    bacnet:AccessZoneObjectnotificationClass, bacnet:AccessZoneObjectnotifyType, bacnet:AccessZoneObjectoccupancyCount,
    bacnet:AccessZoneObjectoccupancyCountEnable, bacnet:AccessZoneObjectoccupancyLowerLimit,
    bacnet:AccessZoneObjectoccupancyState, bacnet:AccessZoneObjectoccupancyUpperLimit,
    bacnet:AccessZoneObjectoutOfService, bacnet:AccessZoneObjectpassbackMode, bacnet:AccessZoneObjectpassbackTimeout,
    bacnet:AccessZoneObjectreliability, bacnet:AccessZoneObjectstatusFlags, bacnet:AccessZoneObjecttimeDelay .

bacnet:AccessZoneObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AccessZoneObjectoccupancyCountEnable a skos:Concept;
  skos:altLabel "occupancy count enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyCountEnable";
  skos:related xsd:boolean .

bacnet:AccessZoneObjectglobalIdentifier a skos:Concept;
  skos:altLabel "global identifier";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "globalIdentifier";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectoccupancyCount a skos:Concept;
  skos:altLabel "occupancy count";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyCount";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectoccupancyUpperLimit a skos:Concept;
  skos:altLabel "occupancy upper limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyUpperLimit";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectoccupancyLowerLimit a skos:Concept;
  skos:altLabel "occupancy lower limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyLowerLimit";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectpassbackTimeout a skos:Concept;
  skos:altLabel "passback timeout";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "passbackTimeout";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AccessZoneObjectadjustValue a skos:Concept;
  skos:altLabel "adjust value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "adjustValue";
  skos:related xsd:long .

bacnet:AccessZoneObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccessZoneObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccessZoneObjectlastCredentialAddedTime a skos:Concept;
  skos:altLabel "last credential added time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastCredentialAddedTime";
  skos:related bacnet:DateTime .

bacnet:AccessZoneObjectlastCredentialRemovedTime a skos:Concept;
  skos:altLabel "last credential removed time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastCredentialRemovedTime";
  skos:related bacnet:DateTime .

bacnet:AccessZoneObjectlastCredentialAdded a skos:Concept;
  skos:altLabel "last credential added";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastCredentialAdded";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessZoneObjectlastCredentialRemoved a skos:Concept;
  skos:altLabel "last credential removed";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastCredentialRemoved";
  skos:related bacnet:DeviceObjectReference .

bacnet:AccessZoneObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AccessZoneObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessZoneObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AccessZoneObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AccessZoneObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AccessZoneObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AccessZoneObjectpassbackMode a skos:Concept;
  skos:altLabel "passback mode";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "passbackMode";
  skos:related bacnet:AccessPassbackMode .

bacnet:AccessZoneObjectcredentialsInZone a skos:Concept;
  skos:altLabel "credentials in zone";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "credentialsInZone";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessZoneObjectentryPoints a skos:Concept;
  skos:altLabel "entry points";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "entryPoints";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessZoneObjectexitPoints a skos:Concept;
  skos:altLabel "exit points";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "exitPoints";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:AccessZoneObjectoccupancyState a skos:Concept;
  skos:altLabel "occupancy state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "occupancyState";
  skos:related bacnet:AccessZoneOccupancyState .

bacnet:AccessZoneObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfAccessZoneOccupancyState .

bacnet:AccumulatorObject a skos:Concept;
  skos:altLabel "accumulator object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AccumulatorObject";
  skos:related bacnet:AccumulatorObjectackedTransitions, bacnet:AccumulatorObjectdeviceType,
    bacnet:AccumulatorObjecteventEnable, bacnet:AccumulatorObjecteventMessageTexts, bacnet:AccumulatorObjecteventState,
    bacnet:AccumulatorObjecteventTimeStamps, bacnet:AccumulatorObjecthighLimit, bacnet:AccumulatorObjectlimitEnable,
    bacnet:AccumulatorObjectlimitMonitoringInterval, bacnet:AccumulatorObjectloggingObject,
    bacnet:AccumulatorObjectloggingRecord, bacnet:AccumulatorObjectlowLimit, bacnet:AccumulatorObjectmaxPresValue,
    bacnet:AccumulatorObjectnotificationClass, bacnet:AccumulatorObjectnotifyType, bacnet:AccumulatorObjectoutOfService,
    bacnet:AccumulatorObjectprescale, bacnet:AccumulatorObjectpresentValue, bacnet:AccumulatorObjectpulseRate,
    bacnet:AccumulatorObjectreliability, bacnet:AccumulatorObjectscale, bacnet:AccumulatorObjectstatusFlags,
    bacnet:AccumulatorObjecttimeDelay, bacnet:AccumulatorObjectunits, bacnet:AccumulatorObjectvalueBeforeChange,
    bacnet:AccumulatorObjectvalueChangeTime, bacnet:AccumulatorObjectvalueSet .

bacnet:AccumulatorObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AccumulatorObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectmaxPresValue a skos:Concept;
  skos:altLabel "max pres value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxPresValue";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectvalueBeforeChange a skos:Concept;
  skos:altLabel "value before change";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "valueBeforeChange";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectvalueSet a skos:Concept;
  skos:altLabel "value set";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "valueSet";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectpulseRate a skos:Concept;
  skos:altLabel "pulse rate";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "pulseRate";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectlimitMonitoringInterval a skos:Concept;
  skos:altLabel "limit monitoring interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitMonitoringInterval";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AccumulatorObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:AccumulatorObjectloggingObject a skos:Concept;
  skos:altLabel "logging object";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "loggingObject";
  skos:related bacnet:ObjectIdentifier .

bacnet:AccumulatorObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AccumulatorObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AccumulatorObjectvalueChangeTime a skos:Concept;
  skos:altLabel "value change time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "valueChangeTime";
  skos:related bacnet:DateTime .

bacnet:AccumulatorObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AccumulatorObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AccumulatorObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AccumulatorObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AccumulatorObjectscale a skos:Concept;
  skos:altLabel "scale";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "scale";
  skos:related bacnet:Scale .

bacnet:AccumulatorObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:AccumulatorObjectprescale a skos:Concept;
  skos:altLabel "prescale";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "prescale";
  skos:related bacnet:Prescale .

bacnet:AccumulatorObjectloggingRecord a skos:Concept;
  skos:altLabel "logging record";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "loggingRecord";
  skos:related bacnet:AccumulatorRecord .

bacnet:AccumulatorObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:AccumulatorObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:SequenceOfTimeStamp .

bacnet:AccumulatorObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:SequenceOfCharacterString .

bacnet:AnalogInputObject a skos:Concept;
  skos:altLabel "analog input object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AnalogInputObject";
  skos:related bacnet:AnalogInputObjectackedTransitions, bacnet:AnalogInputObjectcovIncrement,
    bacnet:AnalogInputObjectdeadband, bacnet:AnalogInputObjectdeviceType, bacnet:AnalogInputObjecteventEnable,
    bacnet:AnalogInputObjecteventMessageTexts, bacnet:AnalogInputObjecteventState, bacnet:AnalogInputObjecteventTimeStamps,
    bacnet:AnalogInputObjecthighLimit, bacnet:AnalogInputObjectlimitEnable, bacnet:AnalogInputObjectlowLimit,
    bacnet:AnalogInputObjectmaxPresValue, bacnet:AnalogInputObjectminPresValue, bacnet:AnalogInputObjectnotificationClass,
    bacnet:AnalogInputObjectnotifyType, bacnet:AnalogInputObjectoutOfService, bacnet:AnalogInputObjectpresentValue,
    bacnet:AnalogInputObjectreliability, bacnet:AnalogInputObjectresolution, bacnet:AnalogInputObjectstatusFlags,
    bacnet:AnalogInputObjecttimeDelay, bacnet:AnalogInputObjectunits, bacnet:AnalogInputObjectupdateInterval .

bacnet:AnalogInputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AnalogInputObjectupdateInterval a skos:Concept;
  skos:altLabel "update interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "updateInterval";
  skos:related xsd:unsignedLong .

bacnet:AnalogInputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AnalogInputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AnalogInputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:float .

bacnet:AnalogInputObjectminPresValue a skos:Concept;
  skos:altLabel "min pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minPresValue";
  skos:related xsd:float .

bacnet:AnalogInputObjectmaxPresValue a skos:Concept;
  skos:altLabel "max pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxPresValue";
  skos:related xsd:float .

bacnet:AnalogInputObjectresolution a skos:Concept;
  skos:altLabel "resolution";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "resolution";
  skos:related xsd:float .

bacnet:AnalogInputObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:float .

bacnet:AnalogInputObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:float .

bacnet:AnalogInputObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:float .

bacnet:AnalogInputObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:float .

bacnet:AnalogInputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:AnalogInputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AnalogInputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AnalogInputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AnalogInputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogInputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogInputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AnalogInputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AnalogInputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AnalogInputObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:AnalogInputObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:AnalogOutputObject a skos:Concept;
  skos:altLabel "analog output object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AnalogOutputObject";
  skos:related bacnet:AnalogOutputObjectackedTransitions, bacnet:AnalogOutputObjectcovIncrement,
    bacnet:AnalogOutputObjectdeadband, bacnet:AnalogOutputObjectdeviceType, bacnet:AnalogOutputObjecteventEnable,
    bacnet:AnalogOutputObjecteventMessageTexts, bacnet:AnalogOutputObjecteventState, bacnet:AnalogOutputObjecteventTimeStamps,
    bacnet:AnalogOutputObjecthighLimit, bacnet:AnalogOutputObjectlimitEnable, bacnet:AnalogOutputObjectlowLimit,
    bacnet:AnalogOutputObjectmaxPresValue, bacnet:AnalogOutputObjectminPresValue, bacnet:AnalogOutputObjectnotificationClass,
    bacnet:AnalogOutputObjectnotifyType, bacnet:AnalogOutputObjectoutOfService, bacnet:AnalogOutputObjectpresentValue,
    bacnet:AnalogOutputObjectpriorityArray, bacnet:AnalogOutputObjectreliability, bacnet:AnalogOutputObjectrelinquishDefault,
    bacnet:AnalogOutputObjectresolution, bacnet:AnalogOutputObjectstatusFlags, bacnet:AnalogOutputObjecttimeDelay,
    bacnet:AnalogOutputObjectunits .

bacnet:AnalogOutputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AnalogOutputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AnalogOutputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AnalogOutputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:float .

bacnet:AnalogOutputObjectminPresValue a skos:Concept;
  skos:altLabel "min pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minPresValue";
  skos:related xsd:float .

bacnet:AnalogOutputObjectmaxPresValue a skos:Concept;
  skos:altLabel "max pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxPresValue";
  skos:related xsd:float .

bacnet:AnalogOutputObjectresolution a skos:Concept;
  skos:altLabel "resolution";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "resolution";
  skos:related xsd:float .

bacnet:AnalogOutputObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:float .

bacnet:AnalogOutputObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:float .

bacnet:AnalogOutputObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:float .

bacnet:AnalogOutputObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:float .

bacnet:AnalogOutputObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:float .

bacnet:AnalogOutputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:AnalogOutputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AnalogOutputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AnalogOutputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AnalogOutputObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:AnalogOutputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogOutputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogOutputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AnalogOutputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AnalogOutputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AnalogOutputObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:AnalogOutputObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:AnalogValueObject a skos:Concept;
  skos:altLabel "analog value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AnalogValueObject";
  skos:related bacnet:AnalogValueObjectackedTransitions, bacnet:AnalogValueObjectcovIncrement,
    bacnet:AnalogValueObjectdeadband, bacnet:AnalogValueObjecteventEnable, bacnet:AnalogValueObjecteventMessageTexts,
    bacnet:AnalogValueObjecteventState, bacnet:AnalogValueObjecteventTimeStamps, bacnet:AnalogValueObjecthighLimit,
    bacnet:AnalogValueObjectlimitEnable, bacnet:AnalogValueObjectlowLimit, bacnet:AnalogValueObjectmaxPresValue,
    bacnet:AnalogValueObjectminPresValue, bacnet:AnalogValueObjectnotificationClass, bacnet:AnalogValueObjectnotifyType,
    bacnet:AnalogValueObjectoutOfService, bacnet:AnalogValueObjectpresentValue, bacnet:AnalogValueObjectpriorityArray,
    bacnet:AnalogValueObjectreliability, bacnet:AnalogValueObjectrelinquishDefault, bacnet:AnalogValueObjectresolution,
    bacnet:AnalogValueObjectstatusFlags, bacnet:AnalogValueObjecttimeDelay, bacnet:AnalogValueObjectunits .

bacnet:AnalogValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:AnalogValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:AnalogValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:AnalogValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:float .

bacnet:AnalogValueObjectminPresValue a skos:Concept;
  skos:altLabel "min pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minPresValue";
  skos:related xsd:float .

bacnet:AnalogValueObjectmaxPresValue a skos:Concept;
  skos:altLabel "max pres value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxPresValue";
  skos:related xsd:float .

bacnet:AnalogValueObjectresolution a skos:Concept;
  skos:altLabel "resolution";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "resolution";
  skos:related xsd:float .

bacnet:AnalogValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:float .

bacnet:AnalogValueObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:float .

bacnet:AnalogValueObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:float .

bacnet:AnalogValueObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:float .

bacnet:AnalogValueObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:float .

bacnet:AnalogValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:AnalogValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:AnalogValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:AnalogValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:AnalogValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:AnalogValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:AnalogValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:AnalogValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:AnalogValueObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:AnalogValueObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:AveragingObject a skos:Concept;
  skos:altLabel "averaging object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "AveragingObject";
  skos:related bacnet:AveragingObjectattemptedSamples, bacnet:AveragingObjectaverageValue,
    bacnet:AveragingObjectmaximumValue, bacnet:AveragingObjectmaximumValueTimestamp, bacnet:AveragingObjectminimumValue,
    bacnet:AveragingObjectminimumValueTimestamp, bacnet:AveragingObjectobjectPropertyReference,
    bacnet:AveragingObjectvalidSamples, bacnet:AveragingObjectvarianceValue, bacnet:AveragingObjectwindowInterval,
    bacnet:AveragingObjectwindowSamples .

bacnet:AveragingObjectattemptedSamples a skos:Concept;
  skos:altLabel "attempted samples";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "attemptedSamples";
  skos:related xsd:unsignedLong .

bacnet:AveragingObjectvalidSamples a skos:Concept;
  skos:altLabel "valid samples";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "validSamples";
  skos:related xsd:unsignedLong .

bacnet:AveragingObjectwindowInterval a skos:Concept;
  skos:altLabel "window interval";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "windowInterval";
  skos:related xsd:unsignedLong .

bacnet:AveragingObjectwindowSamples a skos:Concept;
  skos:altLabel "window samples";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "windowSamples";
  skos:related xsd:unsignedLong .

bacnet:AveragingObjectminimumValue a skos:Concept;
  skos:altLabel "minimum value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumValue";
  skos:related xsd:float .

bacnet:AveragingObjectaverageValue a skos:Concept;
  skos:altLabel "average value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "averageValue";
  skos:related xsd:float .

bacnet:AveragingObjectvarianceValue a skos:Concept;
  skos:altLabel "variance value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "varianceValue";
  skos:related xsd:float .

bacnet:AveragingObjectmaximumValue a skos:Concept;
  skos:altLabel "maximum value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maximumValue";
  skos:related xsd:float .

bacnet:AveragingObjectminimumValueTimestamp a skos:Concept;
  skos:altLabel "minimum value timestamp";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumValueTimestamp";
  skos:related bacnet:DateTime .

bacnet:AveragingObjectmaximumValueTimestamp a skos:Concept;
  skos:altLabel "maximum value timestamp";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maximumValueTimestamp";
  skos:related bacnet:DateTime .

bacnet:AveragingObjectobjectPropertyReference a skos:Concept;
  skos:altLabel "object property reference";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "objectPropertyReference";
  skos:related bacnet:DeviceObjectPropertyReference .

bacnet:BinaryInputObject a skos:Concept;
  skos:altLabel "binary input object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "BinaryInputObject";
  skos:related bacnet:BinaryInputObjectackedTransitions, bacnet:BinaryInputObjectactiveText,
    bacnet:BinaryInputObjectalarmValue, bacnet:BinaryInputObjectchangeOfStateCount, bacnet:BinaryInputObjectchangeOfStateTime,
    bacnet:BinaryInputObjectdeviceType, bacnet:BinaryInputObjectelapsedActiveTime, bacnet:BinaryInputObjecteventEnable,
    bacnet:BinaryInputObjecteventMessageTexts, bacnet:BinaryInputObjecteventState, bacnet:BinaryInputObjecteventTimeStamps,
    bacnet:BinaryInputObjectinactiveText, bacnet:BinaryInputObjectnotificationClass, bacnet:BinaryInputObjectnotifyType,
    bacnet:BinaryInputObjectoutOfService, bacnet:BinaryInputObjectpolarity, bacnet:BinaryInputObjectpresentValue,
    bacnet:BinaryInputObjectreliability, bacnet:BinaryInputObjectstatusFlags, bacnet:BinaryInputObjecttimeDelay,
    bacnet:BinaryInputObjecttimeOfActiveTimeReset, bacnet:BinaryInputObjecttimeOfStateCountReset .

bacnet:BinaryInputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:BinaryInputObjectchangeOfStateCount a skos:Concept;
  skos:altLabel "change of state count";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateCount";
  skos:related xsd:unsignedLong .

bacnet:BinaryInputObjectelapsedActiveTime a skos:Concept;
  skos:altLabel "elapsed active time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "elapsedActiveTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryInputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:BinaryInputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:BinaryInputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:BinaryInputObjectinactiveText a skos:Concept;
  skos:altLabel "inactive text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "inactiveText";
  skos:related xsd:string .

bacnet:BinaryInputObjectactiveText a skos:Concept;
  skos:altLabel "active text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeText";
  skos:related xsd:string .

bacnet:BinaryInputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:BinaryInputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:BinaryInputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryInputObjectalarmValue a skos:Concept;
  skos:altLabel "alarm value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryInputObjectchangeOfStateTime a skos:Concept;
  skos:altLabel "change of state time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateTime";
  skos:related bacnet:DateTime .

bacnet:BinaryInputObjecttimeOfStateCountReset a skos:Concept;
  skos:altLabel "time of state count reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfStateCountReset";
  skos:related bacnet:DateTime .

bacnet:BinaryInputObjecttimeOfActiveTimeReset a skos:Concept;
  skos:altLabel "time of active time reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfActiveTimeReset";
  skos:related bacnet:DateTime .

bacnet:BinaryInputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:BinaryInputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryInputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryInputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:BinaryInputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:BinaryInputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:BinaryInputObjectpolarity a skos:Concept;
  skos:altLabel "polarity";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "polarity";
  skos:related bacnet:Polarity .

bacnet:BinaryOutputObject a skos:Concept;
  skos:altLabel "binary output object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "BinaryOutputObject";
  skos:related bacnet:BinaryOutputObjectackedTransitions, bacnet:BinaryOutputObjectactiveText,
    bacnet:BinaryOutputObjectchangeOfStateCount, bacnet:BinaryOutputObjectchangeOfStateTime,
    bacnet:BinaryOutputObjectdeviceType, bacnet:BinaryOutputObjectelapsedActiveTime, bacnet:BinaryOutputObjecteventEnable,
    bacnet:BinaryOutputObjecteventMessageTexts, bacnet:BinaryOutputObjecteventState, bacnet:BinaryOutputObjecteventTimeStamps,
    bacnet:BinaryOutputObjectfeedbackValue, bacnet:BinaryOutputObjectinactiveText, bacnet:BinaryOutputObjectminimumOffTime,
    bacnet:BinaryOutputObjectminimumOnTime, bacnet:BinaryOutputObjectnotificationClass,
    bacnet:BinaryOutputObjectnotifyType, bacnet:BinaryOutputObjectoutOfService, bacnet:BinaryOutputObjectpolarity,
    bacnet:BinaryOutputObjectpresentValue, bacnet:BinaryOutputObjectpriorityArray, bacnet:BinaryOutputObjectreliability,
    bacnet:BinaryOutputObjectrelinquishDefault, bacnet:BinaryOutputObjectstatusFlags,
    bacnet:BinaryOutputObjecttimeDelay, bacnet:BinaryOutputObjecttimeOfActiveTimeReset,
    bacnet:BinaryOutputObjecttimeOfStateCountReset .

bacnet:BinaryOutputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:BinaryOutputObjectchangeOfStateCount a skos:Concept;
  skos:altLabel "change of state count";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateCount";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjectelapsedActiveTime a skos:Concept;
  skos:altLabel "elapsed active time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "elapsedActiveTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjectminimumOffTime a skos:Concept;
  skos:altLabel "minimum off time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumOffTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjectminimumOnTime a skos:Concept;
  skos:altLabel "minimum on time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumOnTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:BinaryOutputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:BinaryOutputObjectinactiveText a skos:Concept;
  skos:altLabel "inactive text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "inactiveText";
  skos:related xsd:string .

bacnet:BinaryOutputObjectactiveText a skos:Concept;
  skos:altLabel "active text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeText";
  skos:related xsd:string .

bacnet:BinaryOutputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:BinaryOutputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:BinaryOutputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryOutputObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:BinaryPV .

bacnet:BinaryOutputObjectfeedbackValue a skos:Concept;
  skos:altLabel "feedback value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "feedbackValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryOutputObjectchangeOfStateTime a skos:Concept;
  skos:altLabel "change of state time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateTime";
  skos:related bacnet:DateTime .

bacnet:BinaryOutputObjecttimeOfStateCountReset a skos:Concept;
  skos:altLabel "time of state count reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfStateCountReset";
  skos:related bacnet:DateTime .

bacnet:BinaryOutputObjecttimeOfActiveTimeReset a skos:Concept;
  skos:altLabel "time of active time reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfActiveTimeReset";
  skos:related bacnet:DateTime .

bacnet:BinaryOutputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:BinaryOutputObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:BinaryOutputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryOutputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryOutputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:BinaryOutputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:BinaryOutputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:BinaryOutputObjectpolarity a skos:Concept;
  skos:altLabel "polarity";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "polarity";
  skos:related bacnet:Polarity .

bacnet:BinaryValueObject a skos:Concept;
  skos:altLabel "binary value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "BinaryValueObject";
  skos:related bacnet:BinaryValueObjectackedTransitions, bacnet:BinaryValueObjectactiveText,
    bacnet:BinaryValueObjectalarmValue, bacnet:BinaryValueObjectchangeOfStateCount, bacnet:BinaryValueObjectchangeOfStateTime,
    bacnet:BinaryValueObjectelapsedActiveTime, bacnet:BinaryValueObjecteventEnable, bacnet:BinaryValueObjecteventMessageTexts,
    bacnet:BinaryValueObjecteventState, bacnet:BinaryValueObjecteventTimeStamps, bacnet:BinaryValueObjectinactiveText,
    bacnet:BinaryValueObjectminimumOffTime, bacnet:BinaryValueObjectminimumOnTime, bacnet:BinaryValueObjectnotificationClass,
    bacnet:BinaryValueObjectnotifyType, bacnet:BinaryValueObjectoutOfService, bacnet:BinaryValueObjectpresentValue,
    bacnet:BinaryValueObjectpriorityArray, bacnet:BinaryValueObjectreliability, bacnet:BinaryValueObjectrelinquishDefault,
    bacnet:BinaryValueObjectstatusFlags, bacnet:BinaryValueObjecttimeDelay, bacnet:BinaryValueObjecttimeOfActiveTimeReset,
    bacnet:BinaryValueObjecttimeOfStateCountReset .

bacnet:BinaryValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:BinaryValueObjectchangeOfStateCount a skos:Concept;
  skos:altLabel "change of state count";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateCount";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjectelapsedActiveTime a skos:Concept;
  skos:altLabel "elapsed active time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "elapsedActiveTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjectminimumOffTime a skos:Concept;
  skos:altLabel "minimum off time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumOffTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjectminimumOnTime a skos:Concept;
  skos:altLabel "minimum on time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumOnTime";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:BinaryValueObjectinactiveText a skos:Concept;
  skos:altLabel "inactive text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "inactiveText";
  skos:related xsd:string .

bacnet:BinaryValueObjectactiveText a skos:Concept;
  skos:altLabel "active text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeText";
  skos:related xsd:string .

bacnet:BinaryValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:BinaryValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:BinaryValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:BinaryPV .

bacnet:BinaryValueObjectalarmValue a skos:Concept;
  skos:altLabel "alarm value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValue";
  skos:related bacnet:BinaryPV .

bacnet:BinaryValueObjectchangeOfStateTime a skos:Concept;
  skos:altLabel "change of state time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "changeOfStateTime";
  skos:related bacnet:DateTime .

bacnet:BinaryValueObjecttimeOfStateCountReset a skos:Concept;
  skos:altLabel "time of state count reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfStateCountReset";
  skos:related bacnet:DateTime .

bacnet:BinaryValueObjecttimeOfActiveTimeReset a skos:Concept;
  skos:altLabel "time of active time reset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfActiveTimeReset";
  skos:related bacnet:DateTime .

bacnet:BinaryValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:BinaryValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:BinaryValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:BinaryValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:BinaryValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:BinaryValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:BitStringValueObject a skos:Concept;
  skos:altLabel "bit string value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "BitStringValueObject";
  skos:related bacnet:BitStringValueObjectackedTransitions, bacnet:BitStringValueObjectalarmValues,
    bacnet:BitStringValueObjectbitMask, bacnet:BitStringValueObjectbitText, bacnet:BitStringValueObjecteventEnable,
    bacnet:BitStringValueObjecteventMessageTexts, bacnet:BitStringValueObjecteventState,
    bacnet:BitStringValueObjecteventTimeStamps, bacnet:BitStringValueObjectnotificationClass,
    bacnet:BitStringValueObjectnotifyType, bacnet:BitStringValueObjectoutOfService, bacnet:BitStringValueObjectpresentValue,
    bacnet:BitStringValueObjectpriorityArray, bacnet:BitStringValueObjectreliability,
    bacnet:BitStringValueObjectrelinquishDefault, bacnet:BitStringValueObjectstatusFlags,
    bacnet:BitStringValueObjecttimeDelay .

bacnet:BitStringValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:BitStringValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:BitStringValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:BitStringValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:BitString .

bacnet:BitStringValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:BitString .

bacnet:BitStringValueObjectbitMask a skos:Concept;
  skos:altLabel "bit mask";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bitMask";
  skos:related bacnet:BitString .

bacnet:BitStringValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:BitStringValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:BitStringValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:BitStringValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:BitStringValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:BitStringValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:BitStringValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:BitStringValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:BitStringValueObjectbitText a skos:Concept;
  skos:altLabel "bit text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bitText";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:BitStringValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:BitStringValueObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:ArrayOfBitString .

bacnet:CalendarObject a skos:Concept;
  skos:altLabel "calendar object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "CalendarObject";
  skos:related bacnet:CalendarObjectdateList, bacnet:CalendarObjectpresentValue .

bacnet:CalendarObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:boolean .

bacnet:CalendarObjectdateList a skos:Concept;
  skos:altLabel "date list";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "dateList";
  skos:related bacnet:SequenceOfCalendarEntry .

bacnet:CharacterStringValueObject a skos:Concept;
  skos:altLabel "character string value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "CharacterStringValueObject";
  skos:related bacnet:CharacterStringValueObjectackedTransitions, bacnet:CharacterStringValueObjectalarmValues,
    bacnet:CharacterStringValueObjecteventEnable, bacnet:CharacterStringValueObjecteventMessageTexts,
    bacnet:CharacterStringValueObjecteventState, bacnet:CharacterStringValueObjecteventTimeStamps,
    bacnet:CharacterStringValueObjectfaultValues, bacnet:CharacterStringValueObjectnotificationClass,
    bacnet:CharacterStringValueObjectnotifyType, bacnet:CharacterStringValueObjectoutOfService,
    bacnet:CharacterStringValueObjectpresentValue, bacnet:CharacterStringValueObjectpriorityArray,
    bacnet:CharacterStringValueObjectreliability, bacnet:CharacterStringValueObjectrelinquishDefault,
    bacnet:CharacterStringValueObjectstatusFlags, bacnet:CharacterStringValueObjecttimeDelay .

bacnet:CharacterStringValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:CharacterStringValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:CharacterStringValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:CharacterStringValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:CharacterStringValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:string .

bacnet:CharacterStringValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:CharacterStringValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:CharacterStringValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:CharacterStringValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:CharacterStringValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:CharacterStringValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:CharacterStringValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:CharacterStringValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:CharacterStringValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:CharacterStringValueObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:ArrayOfOptionalCharacterString .

bacnet:CharacterStringValueObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:ArrayOfOptionalCharacterString .

bacnet:CommandObject a skos:Concept;
  skos:altLabel "command object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "CommandObject";
  skos:related bacnet:CommandObjectaction, bacnet:CommandObjectactionText, bacnet:CommandObjectallWritesSuccessful,
    bacnet:CommandObjectinProcess, bacnet:CommandObjectpresentValue .

bacnet:CommandObjectinProcess a skos:Concept;
  skos:altLabel "in process";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "inProcess";
  skos:related xsd:boolean .

bacnet:CommandObjectallWritesSuccessful a skos:Concept;
  skos:altLabel "all writes successful";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "allWritesSuccessful";
  skos:related xsd:boolean .

bacnet:CommandObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:CommandObjectactionText a skos:Concept;
  skos:altLabel "action text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "actionText";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:CommandObjectaction a skos:Concept;
  skos:altLabel "action";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "action";
  skos:related bacnet:ArrayOfActionList .

bacnet:CredentialDataInputObject a skos:Concept;
  skos:altLabel "credential data input object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "CredentialDataInputObject";
  skos:related bacnet:CredentialDataInputObjectoutOfService, bacnet:CredentialDataInputObjectpresentValue,
    bacnet:CredentialDataInputObjectreliability, bacnet:CredentialDataInputObjectstatusFlags,
    bacnet:CredentialDataInputObjectsupportedFormatClasses, bacnet:CredentialDataInputObjectsupportedFormats .

bacnet:CredentialDataInputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:CredentialDataInputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:CredentialDataInputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:CredentialDataInputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:AuthenticationFactor .

bacnet:CredentialDataInputObjectsupportedFormats a skos:Concept;
  skos:altLabel "supported formats";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "supportedFormats";
  skos:related bacnet:ArrayOfAuthenticationFactorFormat .

bacnet:CredentialDataInputObjectsupportedFormatClasses a skos:Concept;
  skos:altLabel "supported format classes";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "supportedFormatClasses";
  skos:related bacnet:ArrayOfUnsigned .

bacnet:DatePatternValueObject a skos:Concept;
  skos:altLabel "date pattern value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "DatePatternValueObject";
  skos:related bacnet:DatePatternValueObjecteventState, bacnet:DatePatternValueObjectoutOfService,
    bacnet:DatePatternValueObjectpresentValue, bacnet:DatePatternValueObjectpriorityArray,
    bacnet:DatePatternValueObjectreliability, bacnet:DatePatternValueObjectrelinquishDefault,
    bacnet:DatePatternValueObjectstatusFlags .

bacnet:DatePatternValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:DatePatternValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:DatePatternValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:DatePatternValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:DatePatternValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:DateTime .

bacnet:DatePatternValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:DatePatternValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:DateTimePatternValueObject a skos:Concept;
  skos:altLabel "date time pattern value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "DateTimePatternValueObject";
  skos:related bacnet:DateTimePatternValueObjecteventState, bacnet:DateTimePatternValueObjectisUtc,
    bacnet:DateTimePatternValueObjectoutOfService, bacnet:DateTimePatternValueObjectpresentValue,
    bacnet:DateTimePatternValueObjectpriorityArray, bacnet:DateTimePatternValueObjectreliability,
    bacnet:DateTimePatternValueObjectrelinquishDefault, bacnet:DateTimePatternValueObjectstatusFlags .

bacnet:DateTimePatternValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:DateTimePatternValueObjectisUtc a skos:Concept;
  skos:altLabel "is utc";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "isUtc";
  skos:related xsd:boolean .

bacnet:DateTimePatternValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:DateTimePatternValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:DateTimePatternValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:DateTime .

bacnet:DateTimePatternValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:DateTime .

bacnet:DateTimePatternValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:DateTimePatternValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:DateTimeValueObject a skos:Concept;
  skos:altLabel "date time value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "DateTimeValueObject";
  skos:related bacnet:DateTimeValueObjecteventState, bacnet:DateTimeValueObjectisUtc,
    bacnet:DateTimeValueObjectoutOfService, bacnet:DateTimeValueObjectpresentValue, bacnet:DateTimeValueObjectpriorityArray,
    bacnet:DateTimeValueObjectreliability, bacnet:DateTimeValueObjectrelinquishDefault,
    bacnet:DateTimeValueObjectstatusFlags .

bacnet:DateTimeValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:DateTimeValueObjectisUtc a skos:Concept;
  skos:altLabel "is utc";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "isUtc";
  skos:related xsd:boolean .

bacnet:DateTimeValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:DateTimeValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:DateTimeValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:DateTime .

bacnet:DateTimeValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:DateTime .

bacnet:DateTimeValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:DateTimeValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:DateValueObject a skos:Concept;
  skos:altLabel "date value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "DateValueObject";
  skos:related bacnet:DateValueObjecteventState, bacnet:DateValueObjectoutOfService,
    bacnet:DateValueObjectpresentValue, bacnet:DateValueObjectpriorityArray, bacnet:DateValueObjectreliability,
    bacnet:DateValueObjectrelinquishDefault, bacnet:DateValueObjectstatusFlags .

bacnet:DateValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:DateValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:DateValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:string .

bacnet:DateValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:DateValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:DateValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:DateValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:DeviceObject a skos:Concept;
  skos:altLabel "device object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "DeviceObject";
  skos:related bacnet:DeviceObjectactiveCovSubscriptions, bacnet:DeviceObjectactiveVtSessions,
    bacnet:DeviceObjectalignIntervals, bacnet:DeviceObjectapduSegmentTimeout, bacnet:DeviceObjectapduTimeout,
    bacnet:DeviceObjectapplicationSoftwareVersion, bacnet:DeviceObjectautoSlaveDiscovery,
    bacnet:DeviceObjectbackupAndRestoreState, bacnet:DeviceObjectbackupFailureTimeout,
    bacnet:DeviceObjectbackupPreparationTime, bacnet:DeviceObjectconfigurationFiles, bacnet:DeviceObjectdatabaseRevision,
    bacnet:DeviceObjectdaylightSavingsStatus, bacnet:DeviceObjectdeviceAddressBinding,
    bacnet:DeviceObjectfirmwareRevision, bacnet:DeviceObjectintervalOffset, bacnet:DeviceObjectlastRestartReason,
    bacnet:DeviceObjectlastRestoreTime, bacnet:DeviceObjectlocalDate, bacnet:DeviceObjectlocalTime,
    bacnet:DeviceObjectlocation, bacnet:DeviceObjectmanualSlaveAddressBinding, bacnet:DeviceObjectmaxApduLengthAccepted,
    bacnet:DeviceObjectmaxInfoFrames, bacnet:DeviceObjectmaxMaster, bacnet:DeviceObjectmaxSegmentsAccepted,
    bacnet:DeviceObjectmodelName, bacnet:DeviceObjectnumberOfApduRetries, bacnet:DeviceObjectobjectList,
    bacnet:DeviceObjectprotocolObjectTypesSupported, bacnet:DeviceObjectprotocolRevision,
    bacnet:DeviceObjectprotocolServicesSupported, bacnet:DeviceObjectprotocolVersion,
    bacnet:DeviceObjectrestartNotificationRecipients, bacnet:DeviceObjectrestoreCompletionTime,
    bacnet:DeviceObjectrestorePreparationTime, bacnet:DeviceObjectsegmentationSupported,
    bacnet:DeviceObjectslaveAddressBinding, bacnet:DeviceObjectslaveProxyEnable, bacnet:DeviceObjectstructuredObjectList,
    bacnet:DeviceObjectsystemStatus, bacnet:DeviceObjecttimeOfDeviceRestart, bacnet:DeviceObjecttimeSynchronizationInterval,
    bacnet:DeviceObjecttimeSynchronizationRecipients, bacnet:DeviceObjectutcOffset, bacnet:DeviceObjectutcTimeSynchronizationRecipients,
    bacnet:DeviceObjectvendorIdentifier, bacnet:DeviceObjectvendorName, bacnet:DeviceObjectvtClassesSupported .

bacnet:DeviceObjectdaylightSavingsStatus a skos:Concept;
  skos:altLabel "daylight savings status";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "daylightSavingsStatus";
  skos:related xsd:boolean .

bacnet:DeviceObjectalignIntervals a skos:Concept;
  skos:altLabel "align intervals";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alignIntervals";
  skos:related xsd:boolean .

bacnet:DeviceObjectvendorIdentifier a skos:Concept;
  skos:altLabel "vendor identifier";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vendorIdentifier";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectprotocolVersion a skos:Concept;
  skos:altLabel "protocol version";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "protocolVersion";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectprotocolRevision a skos:Concept;
  skos:altLabel "protocol revision";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "protocolRevision";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectmaxApduLengthAccepted a skos:Concept;
  skos:altLabel "max apdu length accepted";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxApduLengthAccepted";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectapduSegmentTimeout a skos:Concept;
  skos:altLabel "apdu segment timeout";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "apduSegmentTimeout";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectapduTimeout a skos:Concept;
  skos:altLabel "apdu timeout";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "apduTimeout";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectnumberOfApduRetries a skos:Concept;
  skos:altLabel "number of apdu retries";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "numberOfApduRetries";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectmaxMaster a skos:Concept;
  skos:altLabel "max master";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxMaster";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectmaxInfoFrames a skos:Concept;
  skos:altLabel "max info frames";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxInfoFrames";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectdatabaseRevision a skos:Concept;
  skos:altLabel "database revision";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "databaseRevision";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectbackupFailureTimeout a skos:Concept;
  skos:altLabel "backup failure timeout";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "backupFailureTimeout";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectbackupPreparationTime a skos:Concept;
  skos:altLabel "backup preparation time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "backupPreparationTime";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectrestorePreparationTime a skos:Concept;
  skos:altLabel "restore preparation time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "restorePreparationTime";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectrestoreCompletionTime a skos:Concept;
  skos:altLabel "restore completion time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "restoreCompletionTime";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectmaxSegmentsAccepted a skos:Concept;
  skos:altLabel "max segments accepted";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maxSegmentsAccepted";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjecttimeSynchronizationInterval a skos:Concept;
  skos:altLabel "time synchronization interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeSynchronizationInterval";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectintervalOffset a skos:Concept;
  skos:altLabel "interval offset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "intervalOffset";
  skos:related xsd:unsignedLong .

bacnet:DeviceObjectutcOffset a skos:Concept;
  skos:altLabel "utc offset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "utcOffset";
  skos:related xsd:long .

bacnet:DeviceObjectvendorName a skos:Concept;
  skos:altLabel "vendor name";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vendorName";
  skos:related xsd:string .

bacnet:DeviceObjectmodelName a skos:Concept;
  skos:altLabel "model name";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "modelName";
  skos:related xsd:string .

bacnet:DeviceObjectfirmwareRevision a skos:Concept;
  skos:altLabel "firmware revision";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "firmwareRevision";
  skos:related xsd:string .

bacnet:DeviceObjectapplicationSoftwareVersion a skos:Concept;
  skos:altLabel "application software version";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "applicationSoftwareVersion";
  skos:related xsd:string .

bacnet:DeviceObjectlocation a skos:Concept;
  skos:altLabel "location";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "location";
  skos:related xsd:string .

bacnet:DeviceObjectlocalDate a skos:Concept;
  skos:altLabel "local date";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "localDate";
  skos:related xsd:string .

bacnet:DeviceObjectlocalTime a skos:Concept;
  skos:altLabel "local time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "localTime";
  skos:related xsd:string .

bacnet:DeviceObjectlastRestoreTime a skos:Concept;
  skos:altLabel "last restore time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastRestoreTime";
  skos:related bacnet:TimeStamp .

bacnet:DeviceObjecttimeOfDeviceRestart a skos:Concept;
  skos:altLabel "time of device restart";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeOfDeviceRestart";
  skos:related bacnet:TimeStamp .

bacnet:DeviceObjectslaveProxyEnable a skos:Concept;
  skos:altLabel "slave proxy enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "slaveProxyEnable";
  skos:related bacnet:ArrayOfBoolean .

bacnet:DeviceObjectautoSlaveDiscovery a skos:Concept;
  skos:altLabel "auto slave discovery";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "autoSlaveDiscovery";
  skos:related bacnet:ArrayOfBoolean .

bacnet:DeviceObjectobjectList a skos:Concept;
  skos:altLabel "object list";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "objectList";
  skos:related bacnet:ArrayOfObjectIdentifier .

bacnet:DeviceObjectstructuredObjectList a skos:Concept;
  skos:altLabel "structured object list";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "structuredObjectList";
  skos:related bacnet:ArrayOfObjectIdentifier .

bacnet:DeviceObjectconfigurationFiles a skos:Concept;
  skos:altLabel "configuration files";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "configurationFiles";
  skos:related bacnet:ArrayOfObjectIdentifier .

bacnet:DeviceObjectbackupAndRestoreState a skos:Concept;
  skos:altLabel "backup and restore state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "backupAndRestoreState";
  skos:related bacnet:BackupState .

bacnet:DeviceObjectsystemStatus a skos:Concept;
  skos:altLabel "system status";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "systemStatus";
  skos:related bacnet:DeviceStatus .

bacnet:DeviceObjectprotocolServicesSupported a skos:Concept;
  skos:altLabel "protocol services supported";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "protocolServicesSupported";
  skos:related bacnet:ServicesSupported .

bacnet:DeviceObjectprotocolObjectTypesSupported a skos:Concept;
  skos:altLabel "protocol object types supported";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "protocolObjectTypesSupported";
  skos:related bacnet:ObjectTypesSupported .

bacnet:DeviceObjectsegmentationSupported a skos:Concept;
  skos:altLabel "segmentation supported";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "segmentationSupported";
  skos:related bacnet:Segmentation .

bacnet:DeviceObjectvtClassesSupported a skos:Concept;
  skos:altLabel "vt classes supported";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vtClassesSupported";
  skos:related bacnet:SequenceOfVTClass .

bacnet:DeviceObjectactiveVtSessions a skos:Concept;
  skos:altLabel "active vt sessions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeVtSessions";
  skos:related bacnet:SequenceOfVTSession .

bacnet:DeviceObjecttimeSynchronizationRecipients a skos:Concept;
  skos:altLabel "time synchronization recipients";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeSynchronizationRecipients";
  skos:related bacnet:SequenceOfRecipient .

bacnet:DeviceObjectrestartNotificationRecipients a skos:Concept;
  skos:altLabel "restart notification recipients";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "restartNotificationRecipients";
  skos:related bacnet:SequenceOfRecipient .

bacnet:DeviceObjectutcTimeSynchronizationRecipients a skos:Concept;
  skos:altLabel "utc time synchronization recipients";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "utcTimeSynchronizationRecipients";
  skos:related bacnet:SequenceOfRecipient .

bacnet:DeviceObjectdeviceAddressBinding a skos:Concept;
  skos:altLabel "device address binding";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceAddressBinding";
  skos:related bacnet:SequenceOfAddressBinding .

bacnet:DeviceObjectslaveAddressBinding a skos:Concept;
  skos:altLabel "slave address binding";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "slaveAddressBinding";
  skos:related bacnet:SequenceOfAddressBinding .

bacnet:DeviceObjectmanualSlaveAddressBinding a skos:Concept;
  skos:altLabel "manual slave address binding";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "manualSlaveAddressBinding";
  skos:related bacnet:SequenceOfAddressBinding .

bacnet:DeviceObjectactiveCovSubscriptions a skos:Concept;
  skos:altLabel "active cov subscriptions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "activeCovSubscriptions";
  skos:related bacnet:SequenceOfCOVSubscription .

bacnet:DeviceObjectlastRestartReason a skos:Concept;
  skos:altLabel "last restart reason";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastRestartReason";
  skos:related bacnet:RestartReason .

bacnet:EventEnrollmentObject a skos:Concept;
  skos:altLabel "event enrollment object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "EventEnrollmentObject";
  skos:related bacnet:EventEnrollmentObjectackedTransitions, bacnet:EventEnrollmentObjecteventEnable,
    bacnet:EventEnrollmentObjecteventMessageTexts, bacnet:EventEnrollmentObjecteventParameters,
    bacnet:EventEnrollmentObjecteventState, bacnet:EventEnrollmentObjecteventTimeStamps,
    bacnet:EventEnrollmentObjecteventType, bacnet:EventEnrollmentObjectnotificationClass,
    bacnet:EventEnrollmentObjectnotifyType, bacnet:EventEnrollmentObjectobjectPropertyReference .

bacnet:EventEnrollmentObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:EventEnrollmentObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:EventEnrollmentObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:EventEnrollmentObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:EventEnrollmentObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:EventEnrollmentObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:EventEnrollmentObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:EventEnrollmentObjectobjectPropertyReference a skos:Concept;
  skos:altLabel "object property reference";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "objectPropertyReference";
  skos:related bacnet:DeviceObjectPropertyReference .

bacnet:EventEnrollmentObjecteventType a skos:Concept;
  skos:altLabel "event type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventType";
  skos:related bacnet:EventType .

bacnet:EventEnrollmentObjecteventParameters a skos:Concept;
  skos:altLabel "event parameters";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventParameters";
  skos:related bacnet:EventParameter .

bacnet:EventLogObject a skos:Concept;
  skos:altLabel "event log object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "EventLogObject";
  skos:related bacnet:EventLogObjectackedTransitions, bacnet:EventLogObjectbufferSize,
    bacnet:EventLogObjectenable, bacnet:EventLogObjecteventEnable, bacnet:EventLogObjecteventMessageTexts,
    bacnet:EventLogObjecteventState, bacnet:EventLogObjecteventTimeStamps, bacnet:EventLogObjectlastNotifyRecord,
    bacnet:EventLogObjectlogBuffer, bacnet:EventLogObjectnotificationClass, bacnet:EventLogObjectnotificationThreshold,
    bacnet:EventLogObjectnotifyType, bacnet:EventLogObjectrecordCount, bacnet:EventLogObjectrecordsSinceNotification,
    bacnet:EventLogObjectreliability, bacnet:EventLogObjectstartTime, bacnet:EventLogObjectstatusFlags,
    bacnet:EventLogObjectstopTime, bacnet:EventLogObjectstopWhenFull, bacnet:EventLogObjecttotalRecordCount .

bacnet:EventLogObjectenable a skos:Concept;
  skos:altLabel "enable";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "enable";
  skos:related xsd:boolean .

bacnet:EventLogObjectstopWhenFull a skos:Concept;
  skos:altLabel "stop when full";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopWhenFull";
  skos:related xsd:boolean .

bacnet:EventLogObjectbufferSize a skos:Concept;
  skos:altLabel "buffer size";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bufferSize";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectrecordCount a skos:Concept;
  skos:altLabel "record count";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordCount";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjecttotalRecordCount a skos:Concept;
  skos:altLabel "total record count";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "totalRecordCount";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectnotificationThreshold a skos:Concept;
  skos:altLabel "notification threshold";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationThreshold";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectrecordsSinceNotification a skos:Concept;
  skos:altLabel "records since notification";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordsSinceNotification";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectlastNotifyRecord a skos:Concept;
  skos:altLabel "last notify record";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastNotifyRecord";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:EventLogObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:EventLogObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:EventLogObjectstartTime a skos:Concept;
  skos:altLabel "start time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "startTime";
  skos:related bacnet:DateTime .

bacnet:EventLogObjectstopTime a skos:Concept;
  skos:altLabel "stop time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopTime";
  skos:related bacnet:DateTime .

bacnet:EventLogObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:EventLogObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:EventLogObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:EventLogObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:EventLogObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:EventLogObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:EventLogObjectlogBuffer a skos:Concept;
  skos:altLabel "log buffer";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logBuffer";
  skos:related bacnet:SequenceOfEventLogRecord .

bacnet:FileObject a skos:Concept;
  skos:altLabel "file object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "FileObject";
  skos:related bacnet:FileObjectarchive, bacnet:FileObjectfileAccessMethod, bacnet:FileObjectfileSize,
    bacnet:FileObjectfileType, bacnet:FileObjectmodificationDate, bacnet:FileObjectreadOnly,
    bacnet:FileObjectrecordCount .

bacnet:FileObjectarchive a skos:Concept;
  skos:altLabel "archive";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "archive";
  skos:related xsd:boolean .

bacnet:FileObjectreadOnly a skos:Concept;
  skos:altLabel "read only";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "readOnly";
  skos:related xsd:boolean .

bacnet:FileObjectfileSize a skos:Concept;
  skos:altLabel "file size";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "fileSize";
  skos:related xsd:unsignedLong .

bacnet:FileObjectrecordCount a skos:Concept;
  skos:altLabel "record count";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordCount";
  skos:related xsd:unsignedLong .

bacnet:FileObjectfileType a skos:Concept;
  skos:altLabel "file type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "fileType";
  skos:related xsd:string .

bacnet:FileObjectmodificationDate a skos:Concept;
  skos:altLabel "modification date";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "modificationDate";
  skos:related bacnet:DateTime .

bacnet:FileObjectfileAccessMethod a skos:Concept;
  skos:altLabel "file access method";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "fileAccessMethod";
  skos:related bacnet:FileAccessMethod .

bacnet:GlobalGroupObject a skos:Concept;
  skos:altLabel "global group object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "GlobalGroupObject";
  skos:related bacnet:GlobalGroupObjectackedTransitions, bacnet:GlobalGroupObjectclientCovIncrement,
    bacnet:GlobalGroupObjectcovResubscriptionInterval, bacnet:GlobalGroupObjectcovuPeriod,
    bacnet:GlobalGroupObjectcovuRecipients, bacnet:GlobalGroupObjecteventEnable, bacnet:GlobalGroupObjecteventMessageTexts,
    bacnet:GlobalGroupObjecteventState, bacnet:GlobalGroupObjecteventTimeStamps, bacnet:GlobalGroupObjectgroupMemberNames,
    bacnet:GlobalGroupObjectgroupMembers, bacnet:GlobalGroupObjectmemberStatusFlags, bacnet:GlobalGroupObjectnotificationClass,
    bacnet:GlobalGroupObjectnotifyType, bacnet:GlobalGroupObjectoutOfService, bacnet:GlobalGroupObjectpresentValue,
    bacnet:GlobalGroupObjectreliability, bacnet:GlobalGroupObjectrequestedUpdateInterval,
    bacnet:GlobalGroupObjectstatusFlags, bacnet:GlobalGroupObjecttimeDelay, bacnet:GlobalGroupObjectupdateInterval .

bacnet:GlobalGroupObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:GlobalGroupObjectupdateInterval a skos:Concept;
  skos:altLabel "update interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "updateInterval";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjectrequestedUpdateInterval a skos:Concept;
  skos:altLabel "requested update interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "requestedUpdateInterval";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjectcovResubscriptionInterval a skos:Concept;
  skos:altLabel "cov resubscription interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covResubscriptionInterval";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjectcovuPeriod a skos:Concept;
  skos:altLabel "covu period";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covuPeriod";
  skos:related xsd:unsignedLong .

bacnet:GlobalGroupObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:GlobalGroupObjectmemberStatusFlags a skos:Concept;
  skos:altLabel "member status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "memberStatusFlags";
  skos:related bacnet:StatusFlags .

bacnet:GlobalGroupObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:GlobalGroupObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:GlobalGroupObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:GlobalGroupObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:GlobalGroupObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:GlobalGroupObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:GlobalGroupObjectgroupMemberNames a skos:Concept;
  skos:altLabel "group member names";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "groupMemberNames";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:GlobalGroupObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:GlobalGroupObjectgroupMembers a skos:Concept;
  skos:altLabel "group members";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "groupMembers";
  skos:related bacnet:ArrayOfDeviceObjectPropertyReference .

bacnet:GlobalGroupObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:ArrayOfPropertyAccessResult .

bacnet:GlobalGroupObjectclientCovIncrement a skos:Concept;
  skos:altLabel "client cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "clientCovIncrement";
  skos:related bacnet:ClientCOV .

bacnet:GlobalGroupObjectcovuRecipients a skos:Concept;
  skos:altLabel "covu recipients";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covuRecipients";
  skos:related bacnet:SequenceOfRecipient .

bacnet:GroupObject a skos:Concept;
  skos:altLabel "group object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "GroupObject";
  skos:related bacnet:GroupObjectlistOfGroupMembers, bacnet:GroupObjectpresentValue .

bacnet:GroupObjectlistOfGroupMembers a skos:Concept;
  skos:altLabel "list of group members";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "listOfGroupMembers";
  skos:related bacnet:SequenceOfReadAccessSpecification .

bacnet:GroupObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:SequenceOfReadAccessResult .

bacnet:IntegerValueObject a skos:Concept;
  skos:altLabel "integer value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "IntegerValueObject";
  skos:related bacnet:IntegerValueObjectackedTransitions, bacnet:IntegerValueObjectcovIncrement,
    bacnet:IntegerValueObjectdeadband, bacnet:IntegerValueObjecteventEnable, bacnet:IntegerValueObjecteventMessageTexts,
    bacnet:IntegerValueObjecteventState, bacnet:IntegerValueObjecteventTimeStamps, bacnet:IntegerValueObjecthighLimit,
    bacnet:IntegerValueObjectlimitEnable, bacnet:IntegerValueObjectlowLimit, bacnet:IntegerValueObjectnotificationClass,
    bacnet:IntegerValueObjectnotifyType, bacnet:IntegerValueObjectoutOfService, bacnet:IntegerValueObjectpresentValue,
    bacnet:IntegerValueObjectpriorityArray, bacnet:IntegerValueObjectreliability, bacnet:IntegerValueObjectrelinquishDefault,
    bacnet:IntegerValueObjectstatusFlags, bacnet:IntegerValueObjecttimeDelay, bacnet:IntegerValueObjectunits .

bacnet:IntegerValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:IntegerValueObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:unsignedLong .

bacnet:IntegerValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:IntegerValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:IntegerValueObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:unsignedLong .

bacnet:IntegerValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:long .

bacnet:IntegerValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:long .

bacnet:IntegerValueObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:long .

bacnet:IntegerValueObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:long .

bacnet:IntegerValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:IntegerValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:IntegerValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:IntegerValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:IntegerValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:IntegerValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:IntegerValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:IntegerValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:IntegerValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:IntegerValueObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:IntegerValueObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:LargeAnalogValueObject a skos:Concept;
  skos:altLabel "large analog value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "LargeAnalogValueObject";
  skos:related bacnet:LargeAnalogValueObjectackedTransitions, bacnet:LargeAnalogValueObjectcovIncrement,
    bacnet:LargeAnalogValueObjectdeadband, bacnet:LargeAnalogValueObjecteventEnable, bacnet:LargeAnalogValueObjecteventMessageTexts,
    bacnet:LargeAnalogValueObjecteventState, bacnet:LargeAnalogValueObjecteventTimeStamps,
    bacnet:LargeAnalogValueObjecthighLimit, bacnet:LargeAnalogValueObjectlimitEnable,
    bacnet:LargeAnalogValueObjectlowLimit, bacnet:LargeAnalogValueObjectnotificationClass,
    bacnet:LargeAnalogValueObjectnotifyType, bacnet:LargeAnalogValueObjectoutOfService,
    bacnet:LargeAnalogValueObjectpresentValue, bacnet:LargeAnalogValueObjectpriorityArray,
    bacnet:LargeAnalogValueObjectreliability, bacnet:LargeAnalogValueObjectrelinquishDefault,
    bacnet:LargeAnalogValueObjectstatusFlags, bacnet:LargeAnalogValueObjecttimeDelay,
    bacnet:LargeAnalogValueObjectunits .

bacnet:LargeAnalogValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:LargeAnalogValueObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:unsignedLong .

bacnet:LargeAnalogValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:LargeAnalogValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:LargeAnalogValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:long .

bacnet:LargeAnalogValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:double .

bacnet:LargeAnalogValueObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:double .

bacnet:LargeAnalogValueObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:double .

bacnet:LargeAnalogValueObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:double .

bacnet:LargeAnalogValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:LargeAnalogValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:LargeAnalogValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:LargeAnalogValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:LargeAnalogValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:LargeAnalogValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:LargeAnalogValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:LargeAnalogValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:LargeAnalogValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LargeAnalogValueObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:LargeAnalogValueObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:LifeSafetyPointObject a skos:Concept;
  skos:altLabel "life safety point object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "LifeSafetyPointObject";
  skos:related bacnet:LifeSafetyPointObjectacceptedModes, bacnet:LifeSafetyPointObjectackedTransitions,
    bacnet:LifeSafetyPointObjectalarmValues, bacnet:LifeSafetyPointObjectdeviceType, bacnet:LifeSafetyPointObjectdirectReading,
    bacnet:LifeSafetyPointObjecteventEnable, bacnet:LifeSafetyPointObjecteventMessageTexts,
    bacnet:LifeSafetyPointObjecteventState, bacnet:LifeSafetyPointObjecteventTimeStamps,
    bacnet:LifeSafetyPointObjectfaultValues, bacnet:LifeSafetyPointObjectlifeSafetyAlarmValues,
    bacnet:LifeSafetyPointObjectmaintenanceRequired, bacnet:LifeSafetyPointObjectmemberOf,
    bacnet:LifeSafetyPointObjectmode, bacnet:LifeSafetyPointObjectnotificationClass, bacnet:LifeSafetyPointObjectnotifyType,
    bacnet:LifeSafetyPointObjectoperationExpected, bacnet:LifeSafetyPointObjectoutOfService,
    bacnet:LifeSafetyPointObjectpresentValue, bacnet:LifeSafetyPointObjectreliability,
    bacnet:LifeSafetyPointObjectsetting, bacnet:LifeSafetyPointObjectsilenced, bacnet:LifeSafetyPointObjectstatusFlags,
    bacnet:LifeSafetyPointObjecttimeDelay, bacnet:LifeSafetyPointObjecttrackingValue,
    bacnet:LifeSafetyPointObjectunits .

bacnet:LifeSafetyPointObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:LifeSafetyPointObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:LifeSafetyPointObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:LifeSafetyPointObjectsetting a skos:Concept;
  skos:altLabel "setting";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "setting";
  skos:related xsd:unsignedLong .

bacnet:LifeSafetyPointObjectdirectReading a skos:Concept;
  skos:altLabel "direct reading";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "directReading";
  skos:related xsd:float .

bacnet:LifeSafetyPointObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:LifeSafetyPointObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:LifeSafetyPointObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:LifeSafetyPointObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:LifeSafetyPointObjectmaintenanceRequired a skos:Concept;
  skos:altLabel "maintenance required";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maintenanceRequired";
  skos:related bacnet:Maintenance .

bacnet:LifeSafetyPointObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:LifeSafetyPointObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:LifeSafetyPointObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:LifeSafetyPointObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:LifeSafetyPointObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LifeSafetyPointObjectmemberOf a skos:Concept;
  skos:altLabel "member of";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "memberOf";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:LifeSafetyPointObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:LifeSafetyPointObjectlifeSafetyAlarmValues a skos:Concept;
  skos:altLabel "life safety alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lifeSafetyAlarmValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyPointObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyPointObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyPointObjectmode a skos:Concept;
  skos:altLabel "mode";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "mode";
  skos:related bacnet:LifeSafetyMode .

bacnet:LifeSafetyPointObjectoperationExpected a skos:Concept;
  skos:altLabel "operation expected";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "operationExpected";
  skos:related bacnet:LifeSafetyOperation .

bacnet:LifeSafetyPointObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:LifeSafetyState .

bacnet:LifeSafetyPointObjecttrackingValue a skos:Concept;
  skos:altLabel "tracking value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "trackingValue";
  skos:related bacnet:LifeSafetyState .

bacnet:LifeSafetyPointObjectacceptedModes a skos:Concept;
  skos:altLabel "accepted modes";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "acceptedModes";
  skos:related bacnet:SequenceOfLifeSafetyMode .

bacnet:LifeSafetyPointObjectsilenced a skos:Concept;
  skos:altLabel "silenced";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "silenced";
  skos:related bacnet:SilencedState .

bacnet:LifeSafetyZoneObject a skos:Concept;
  skos:altLabel "life safety zone object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "LifeSafetyZoneObject";
  skos:related bacnet:LifeSafetyZoneObjectacceptedModes, bacnet:LifeSafetyZoneObjectackedTransitions,
    bacnet:LifeSafetyZoneObjectalarmValues, bacnet:LifeSafetyZoneObjectdeviceType, bacnet:LifeSafetyZoneObjecteventEnable,
    bacnet:LifeSafetyZoneObjecteventMessageTexts, bacnet:LifeSafetyZoneObjecteventState,
    bacnet:LifeSafetyZoneObjecteventTimeStamps, bacnet:LifeSafetyZoneObjectfaultValues,
    bacnet:LifeSafetyZoneObjectlifeSafetyAlarmValues, bacnet:LifeSafetyZoneObjectmaintenanceRequired,
    bacnet:LifeSafetyZoneObjectmemberOf, bacnet:LifeSafetyZoneObjectmode, bacnet:LifeSafetyZoneObjectnotificationClass,
    bacnet:LifeSafetyZoneObjectnotifyType, bacnet:LifeSafetyZoneObjectoperationExpected,
    bacnet:LifeSafetyZoneObjectoutOfService, bacnet:LifeSafetyZoneObjectpresentValue,
    bacnet:LifeSafetyZoneObjectreliability, bacnet:LifeSafetyZoneObjectsilenced, bacnet:LifeSafetyZoneObjectstatusFlags,
    bacnet:LifeSafetyZoneObjecttimeDelay, bacnet:LifeSafetyZoneObjecttrackingValue, bacnet:LifeSafetyZoneObjectzoneMembers .

bacnet:LifeSafetyZoneObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:LifeSafetyZoneObjectmaintenanceRequired a skos:Concept;
  skos:altLabel "maintenance required";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maintenanceRequired";
  skos:related xsd:boolean .

bacnet:LifeSafetyZoneObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:LifeSafetyZoneObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:LifeSafetyZoneObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:LifeSafetyZoneObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:LifeSafetyZoneObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:LifeSafetyZoneObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:LifeSafetyZoneObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:LifeSafetyZoneObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:LifeSafetyZoneObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:LifeSafetyZoneObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:LifeSafetyZoneObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LifeSafetyZoneObjectzoneMembers a skos:Concept;
  skos:altLabel "zone members";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "zoneMembers";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:LifeSafetyZoneObjectmemberOf a skos:Concept;
  skos:altLabel "member of";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "memberOf";
  skos:related bacnet:SequenceOfDeviceObjectReference .

bacnet:LifeSafetyZoneObjectlifeSafetyAlarmValues a skos:Concept;
  skos:altLabel "life safety alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lifeSafetyAlarmValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyZoneObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyZoneObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:SequenceOfLifeSafetyState .

bacnet:LifeSafetyZoneObjectmode a skos:Concept;
  skos:altLabel "mode";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "mode";
  skos:related bacnet:LifeSafetyMode .

bacnet:LifeSafetyZoneObjectoperationExpected a skos:Concept;
  skos:altLabel "operation expected";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "operationExpected";
  skos:related bacnet:LifeSafetyOperation .

bacnet:LifeSafetyZoneObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:LifeSafetyState .

bacnet:LifeSafetyZoneObjecttrackingValue a skos:Concept;
  skos:altLabel "tracking value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "trackingValue";
  skos:related bacnet:LifeSafetyState .

bacnet:LifeSafetyZoneObjectacceptedModes a skos:Concept;
  skos:altLabel "accepted modes";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "acceptedModes";
  skos:related bacnet:SequenceOfLifeSafetyMode .

bacnet:LifeSafetyZoneObjectsilenced a skos:Concept;
  skos:altLabel "silenced";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "silenced";
  skos:related bacnet:SilencedState .

bacnet:LoadControlObject a skos:Concept;
  skos:altLabel "load control object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "LoadControlObject";
  skos:related bacnet:LoadControlObjectackedTransitions, bacnet:LoadControlObjectactualShedLevel,
    bacnet:LoadControlObjectdutyWindow, bacnet:LoadControlObjectenable, bacnet:LoadControlObjecteventEnable,
    bacnet:LoadControlObjecteventMessageTexts, bacnet:LoadControlObjecteventState, bacnet:LoadControlObjecteventTimeStamps,
    bacnet:LoadControlObjectexpectedShedLevel, bacnet:LoadControlObjectfullDutyBaseline,
    bacnet:LoadControlObjectnotificationClass, bacnet:LoadControlObjectnotifyType, bacnet:LoadControlObjectpresentValue,
    bacnet:LoadControlObjectreliability, bacnet:LoadControlObjectrequestedShedLevel, bacnet:LoadControlObjectshedDuration,
    bacnet:LoadControlObjectshedLevelDescriptions, bacnet:LoadControlObjectshedLevels,
    bacnet:LoadControlObjectstartTime, bacnet:LoadControlObjectstateDescription, bacnet:LoadControlObjectstatusFlags,
    bacnet:LoadControlObjecttimeDelay .

bacnet:LoadControlObjectenable a skos:Concept;
  skos:altLabel "enable";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "enable";
  skos:related xsd:boolean .

bacnet:LoadControlObjectshedDuration a skos:Concept;
  skos:altLabel "shed duration";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "shedDuration";
  skos:related xsd:unsignedLong .

bacnet:LoadControlObjectdutyWindow a skos:Concept;
  skos:altLabel "duty window";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "dutyWindow";
  skos:related xsd:unsignedLong .

bacnet:LoadControlObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:LoadControlObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:LoadControlObjectfullDutyBaseline a skos:Concept;
  skos:altLabel "full duty baseline";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "fullDutyBaseline";
  skos:related xsd:float .

bacnet:LoadControlObjectstateDescription a skos:Concept;
  skos:altLabel "state description";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stateDescription";
  skos:related xsd:string .

bacnet:LoadControlObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:LoadControlObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:LoadControlObjectstartTime a skos:Concept;
  skos:altLabel "start time";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "startTime";
  skos:related bacnet:DateTime .

bacnet:LoadControlObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:LoadControlObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:LoadControlObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:LoadControlObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:LoadControlObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:LoadControlObjectshedLevelDescriptions a skos:Concept;
  skos:altLabel "shed level descriptions";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "shedLevelDescriptions";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LoadControlObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LoadControlObjectshedLevels a skos:Concept;
  skos:altLabel "shed levels";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "shedLevels";
  skos:related bacnet:ArrayOfUnsigned .

bacnet:LoadControlObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:ShedState .

bacnet:LoadControlObjectrequestedShedLevel a skos:Concept;
  skos:altLabel "requested shed level";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "requestedShedLevel";
  skos:related bacnet:ShedLevel .

bacnet:LoadControlObjectexpectedShedLevel a skos:Concept;
  skos:altLabel "expected shed level";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "expectedShedLevel";
  skos:related bacnet:ShedLevel .

bacnet:LoadControlObjectactualShedLevel a skos:Concept;
  skos:altLabel "actual shed level";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "actualShedLevel";
  skos:related bacnet:ShedLevel .

bacnet:LoopObject a skos:Concept;
  skos:altLabel "loop object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "LoopObject";
  skos:related bacnet:LoopObjectackedTransitions, bacnet:LoopObjectaction, bacnet:LoopObjectbias,
    bacnet:LoopObjectcontrolledVariableReference, bacnet:LoopObjectcontrolledVariableUnits,
    bacnet:LoopObjectcontrolledVariableValue, bacnet:LoopObjectcovIncrement, bacnet:LoopObjectdeadband,
    bacnet:LoopObjectderivativeConstant, bacnet:LoopObjectderivativeConstantUnits, bacnet:LoopObjecterrorLimit,
    bacnet:LoopObjecteventEnable, bacnet:LoopObjecteventMessageTexts, bacnet:LoopObjecteventState,
    bacnet:LoopObjecteventTimeStamps, bacnet:LoopObjectintegralConstant, bacnet:LoopObjectintegralConstantUnits,
    bacnet:LoopObjectmanipulatedVariableReference, bacnet:LoopObjectmaximumOutput, bacnet:LoopObjectminimumOutput,
    bacnet:LoopObjectnotificationClass, bacnet:LoopObjectnotifyType, bacnet:LoopObjectoutOfService,
    bacnet:LoopObjectoutputUnits, bacnet:LoopObjectpresentValue, bacnet:LoopObjectpriorityForWriting,
    bacnet:LoopObjectproportionalConstant, bacnet:LoopObjectproportionalConstantUnits,
    bacnet:LoopObjectreliability, bacnet:LoopObjectsetpoint, bacnet:LoopObjectsetpointReference,
    bacnet:LoopObjectstatusFlags, bacnet:LoopObjecttimeDelay, bacnet:LoopObjectupdateInterval .

bacnet:LoopObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:LoopObjectupdateInterval a skos:Concept;
  skos:altLabel "update interval";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "updateInterval";
  skos:related xsd:unsignedLong .

bacnet:LoopObjectpriorityForWriting a skos:Concept;
  skos:altLabel "priority for writing";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityForWriting";
  skos:related xsd:unsignedLong .

bacnet:LoopObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:LoopObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:LoopObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:float .

bacnet:LoopObjectcontrolledVariableValue a skos:Concept;
  skos:altLabel "controlled variable value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "controlledVariableValue";
  skos:related xsd:float .

bacnet:LoopObjectsetpoint a skos:Concept;
  skos:altLabel "setpoint";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "setpoint";
  skos:related xsd:float .

bacnet:LoopObjectproportionalConstant a skos:Concept;
  skos:altLabel "proportional constant";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "proportionalConstant";
  skos:related xsd:float .

bacnet:LoopObjectintegralConstant a skos:Concept;
  skos:altLabel "integral constant";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "integralConstant";
  skos:related xsd:float .

bacnet:LoopObjectderivativeConstant a skos:Concept;
  skos:altLabel "derivative constant";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "derivativeConstant";
  skos:related xsd:float .

bacnet:LoopObjectbias a skos:Concept;
  skos:altLabel "bias";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bias";
  skos:related xsd:float .

bacnet:LoopObjectmaximumOutput a skos:Concept;
  skos:altLabel "maximum output";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "maximumOutput";
  skos:related xsd:float .

bacnet:LoopObjectminimumOutput a skos:Concept;
  skos:altLabel "minimum output";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "minimumOutput";
  skos:related xsd:float .

bacnet:LoopObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:float .

bacnet:LoopObjecterrorLimit a skos:Concept;
  skos:altLabel "error limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "errorLimit";
  skos:related xsd:float .

bacnet:LoopObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:float .

bacnet:LoopObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:LoopObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:LoopObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:LoopObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:LoopObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:LoopObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:LoopObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:LoopObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:LoopObjectoutputUnits a skos:Concept;
  skos:altLabel "output units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outputUnits";
  skos:related bacnet:EngineeringUnits .

bacnet:LoopObjectcontrolledVariableUnits a skos:Concept;
  skos:altLabel "controlled variable units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "controlledVariableUnits";
  skos:related bacnet:EngineeringUnits .

bacnet:LoopObjectproportionalConstantUnits a skos:Concept;
  skos:altLabel "proportional constant units";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "proportionalConstantUnits";
  skos:related bacnet:EngineeringUnits .

bacnet:LoopObjectintegralConstantUnits a skos:Concept;
  skos:altLabel "integral constant units";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "integralConstantUnits";
  skos:related bacnet:EngineeringUnits .

bacnet:LoopObjectderivativeConstantUnits a skos:Concept;
  skos:altLabel "derivative constant units";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "derivativeConstantUnits";
  skos:related bacnet:EngineeringUnits .

bacnet:LoopObjectaction a skos:Concept;
  skos:altLabel "action";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "action";
  skos:related bacnet:Action .

bacnet:LoopObjectmanipulatedVariableReference a skos:Concept;
  skos:altLabel "manipulated variable reference";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "manipulatedVariableReference";
  skos:related bacnet:ObjectPropertyReference .

bacnet:LoopObjectcontrolledVariableReference a skos:Concept;
  skos:altLabel "controlled variable reference";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "controlledVariableReference";
  skos:related bacnet:ObjectPropertyReference .

bacnet:LoopObjectsetpointReference a skos:Concept;
  skos:altLabel "setpoint reference";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "setpointReference";
  skos:related bacnet:SetpointReference .

bacnet:MultiStateInputObject a skos:Concept;
  skos:altLabel "multi state input object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "MultiStateInputObject";
  skos:related bacnet:MultiStateInputObjectackedTransitions, bacnet:MultiStateInputObjectalarmValues,
    bacnet:MultiStateInputObjectdeviceType, bacnet:MultiStateInputObjecteventEnable, bacnet:MultiStateInputObjecteventMessageTexts,
    bacnet:MultiStateInputObjecteventState, bacnet:MultiStateInputObjecteventTimeStamps,
    bacnet:MultiStateInputObjectfaultValues, bacnet:MultiStateInputObjectnotificationClass,
    bacnet:MultiStateInputObjectnotifyType, bacnet:MultiStateInputObjectnumberOfStates,
    bacnet:MultiStateInputObjectoutOfService, bacnet:MultiStateInputObjectpresentValue,
    bacnet:MultiStateInputObjectreliability, bacnet:MultiStateInputObjectstateText, bacnet:MultiStateInputObjectstatusFlags,
    bacnet:MultiStateInputObjecttimeDelay .

bacnet:MultiStateInputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:MultiStateInputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:MultiStateInputObjectnumberOfStates a skos:Concept;
  skos:altLabel "number of states";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "numberOfStates";
  skos:related xsd:unsignedLong .

bacnet:MultiStateInputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:MultiStateInputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:MultiStateInputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:MultiStateInputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:MultiStateInputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:MultiStateInputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:MultiStateInputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateInputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateInputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:MultiStateInputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:MultiStateInputObjectstateText a skos:Concept;
  skos:altLabel "state text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stateText";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateInputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateInputObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfUnsigned .

bacnet:MultiStateInputObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:SequenceOfUnsigned .

bacnet:MultiStateOutputObject a skos:Concept;
  skos:altLabel "multi state output object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "MultiStateOutputObject";
  skos:related bacnet:MultiStateOutputObjectackedTransitions, bacnet:MultiStateOutputObjectdeviceType,
    bacnet:MultiStateOutputObjecteventEnable, bacnet:MultiStateOutputObjecteventMessageTexts,
    bacnet:MultiStateOutputObjecteventState, bacnet:MultiStateOutputObjecteventTimeStamps,
    bacnet:MultiStateOutputObjectfeedbackValue, bacnet:MultiStateOutputObjectnotificationClass,
    bacnet:MultiStateOutputObjectnotifyType, bacnet:MultiStateOutputObjectnumberOfStates,
    bacnet:MultiStateOutputObjectoutOfService, bacnet:MultiStateOutputObjectpresentValue,
    bacnet:MultiStateOutputObjectpriorityArray, bacnet:MultiStateOutputObjectreliability,
    bacnet:MultiStateOutputObjectrelinquishDefault, bacnet:MultiStateOutputObjectstateText,
    bacnet:MultiStateOutputObjectstatusFlags, bacnet:MultiStateOutputObjecttimeDelay .

bacnet:MultiStateOutputObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:MultiStateOutputObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjectnumberOfStates a skos:Concept;
  skos:altLabel "number of states";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "numberOfStates";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjectfeedbackValue a skos:Concept;
  skos:altLabel "feedback value";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "feedbackValue";
  skos:related xsd:unsignedLong .

bacnet:MultiStateOutputObjectdeviceType a skos:Concept;
  skos:altLabel "device type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceType";
  skos:related xsd:string .

bacnet:MultiStateOutputObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:MultiStateOutputObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:MultiStateOutputObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:MultiStateOutputObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:MultiStateOutputObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateOutputObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateOutputObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:MultiStateOutputObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:MultiStateOutputObjectstateText a skos:Concept;
  skos:altLabel "state text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stateText";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateOutputObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateValueObject a skos:Concept;
  skos:altLabel "multi state value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "MultiStateValueObject";
  skos:related bacnet:MultiStateValueObjectackedTransitions, bacnet:MultiStateValueObjectalarmValues,
    bacnet:MultiStateValueObjecteventEnable, bacnet:MultiStateValueObjecteventMessageTexts,
    bacnet:MultiStateValueObjecteventState, bacnet:MultiStateValueObjecteventTimeStamps,
    bacnet:MultiStateValueObjectfaultValues, bacnet:MultiStateValueObjectnotificationClass,
    bacnet:MultiStateValueObjectnotifyType, bacnet:MultiStateValueObjectnumberOfStates,
    bacnet:MultiStateValueObjectoutOfService, bacnet:MultiStateValueObjectpresentValue,
    bacnet:MultiStateValueObjectpriorityArray, bacnet:MultiStateValueObjectreliability,
    bacnet:MultiStateValueObjectrelinquishDefault, bacnet:MultiStateValueObjectstateText,
    bacnet:MultiStateValueObjectstatusFlags, bacnet:MultiStateValueObjecttimeDelay .

bacnet:MultiStateValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:MultiStateValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:MultiStateValueObjectnumberOfStates a skos:Concept;
  skos:altLabel "number of states";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "numberOfStates";
  skos:related xsd:unsignedLong .

bacnet:MultiStateValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:unsignedLong .

bacnet:MultiStateValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:MultiStateValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:MultiStateValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:MultiStateValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:MultiStateValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:MultiStateValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:MultiStateValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:MultiStateValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:MultiStateValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:MultiStateValueObjectstateText a skos:Concept;
  skos:altLabel "state text";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stateText";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:MultiStateValueObjectalarmValues a skos:Concept;
  skos:altLabel "alarm values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alarmValues";
  skos:related bacnet:SequenceOfUnsigned .

bacnet:MultiStateValueObjectfaultValues a skos:Concept;
  skos:altLabel "fault values";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "faultValues";
  skos:related bacnet:SequenceOfUnsigned .

bacnet:NetworkSecurityObject a skos:Concept;
  skos:altLabel "network security object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "NetworkSecurityObject";
  skos:related bacnet:NetworkSecurityObjectbaseDeviceSecurityPolicy .

bacnet:NetworkSecurityObjectbaseDeviceSecurityPolicy a skos:Concept;
  skos:altLabel "base device security policy";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "baseDeviceSecurityPolicy";
  skos:related bacnet:SecurityLevel .

bacnet:NotificationClassObject a skos:Concept;
  skos:altLabel "notification class object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "NotificationClassObject";
  skos:related bacnet:NotificationClassObjectackRequired, bacnet:NotificationClassObjectnotificationClass,
    bacnet:NotificationClassObjectpriority, bacnet:NotificationClassObjectrecipientList .

bacnet:NotificationClassObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:NotificationClassObjectackRequired a skos:Concept;
  skos:altLabel "ack required";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackRequired";
  skos:related bacnet:EventTransitionBits .

bacnet:NotificationClassObjectpriority a skos:Concept;
  skos:altLabel "priority";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priority";
  skos:related bacnet:ArrayOfUnsigned .

bacnet:NotificationClassObjectrecipientList a skos:Concept;
  skos:altLabel "recipient list";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recipientList";
  skos:related bacnet:SequenceOfDestination .

bacnet:OctetStringValueObject a skos:Concept;
  skos:altLabel "octet string value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "OctetStringValueObject";
  skos:related bacnet:OctetStringValueObjecteventState, bacnet:OctetStringValueObjectoutOfService,
    bacnet:OctetStringValueObjectpresentValue, bacnet:OctetStringValueObjectpriorityArray,
    bacnet:OctetStringValueObjectreliability, bacnet:OctetStringValueObjectrelinquishDefault,
    bacnet:OctetStringValueObjectstatusFlags .

bacnet:OctetStringValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:OctetStringValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:base64Binary .

bacnet:OctetStringValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:OctetStringValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:OctetStringValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:OctetStringValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:OctetStringValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:PositiveIntegerValueObject a skos:Concept;
  skos:altLabel "positive integer value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "PositiveIntegerValueObject";
  skos:related bacnet:PositiveIntegerValueObjectackedTransitions, bacnet:PositiveIntegerValueObjectcovIncrement,
    bacnet:PositiveIntegerValueObjectdeadband, bacnet:PositiveIntegerValueObjecteventEnable,
    bacnet:PositiveIntegerValueObjecteventMessageTexts, bacnet:PositiveIntegerValueObjecteventState,
    bacnet:PositiveIntegerValueObjecteventTimeStamps, bacnet:PositiveIntegerValueObjecthighLimit,
    bacnet:PositiveIntegerValueObjectlimitEnable, bacnet:PositiveIntegerValueObjectlowLimit,
    bacnet:PositiveIntegerValueObjectnotificationClass, bacnet:PositiveIntegerValueObjectnotifyType,
    bacnet:PositiveIntegerValueObjectoutOfService, bacnet:PositiveIntegerValueObjectpresentValue,
    bacnet:PositiveIntegerValueObjectpriorityArray, bacnet:PositiveIntegerValueObjectreliability,
    bacnet:PositiveIntegerValueObjectrelinquishDefault, bacnet:PositiveIntegerValueObjectstatusFlags,
    bacnet:PositiveIntegerValueObjecttimeDelay, bacnet:PositiveIntegerValueObjectunits .

bacnet:PositiveIntegerValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:PositiveIntegerValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:unsignedLong .

bacnet:PositiveIntegerValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:PositiveIntegerValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:PositiveIntegerValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:PositiveIntegerValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:PositiveIntegerValueObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:PositiveIntegerValueObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:PositiveIntegerValueObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:PositiveIntegerValueObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:PositiveIntegerValueObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:PositiveIntegerValueObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:PositiveIntegerValueObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:ProgramObject a skos:Concept;
  skos:altLabel "program object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ProgramObject";
  skos:related bacnet:ProgramObjectdescriptionOfHalt, bacnet:ProgramObjectinstanceOf,
    bacnet:ProgramObjectoutOfService, bacnet:ProgramObjectprogramChange, bacnet:ProgramObjectprogramLocation,
    bacnet:ProgramObjectprogramState, bacnet:ProgramObjectreasonForHalt, bacnet:ProgramObjectreliability,
    bacnet:ProgramObjectstatusFlags .

bacnet:ProgramObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:ProgramObjectdescriptionOfHalt a skos:Concept;
  skos:altLabel "description of halt";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "descriptionOfHalt";
  skos:related xsd:string .

bacnet:ProgramObjectprogramLocation a skos:Concept;
  skos:altLabel "program location";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "programLocation";
  skos:related xsd:string .

bacnet:ProgramObjectinstanceOf a skos:Concept;
  skos:altLabel "instance of";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "instanceOf";
  skos:related xsd:string .

bacnet:ProgramObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:ProgramObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:ProgramObjectreasonForHalt a skos:Concept;
  skos:altLabel "reason for halt";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reasonForHalt";
  skos:related bacnet:ProgramError .

bacnet:ProgramObjectprogramState a skos:Concept;
  skos:altLabel "program state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "programState";
  skos:related bacnet:ProgramState .

bacnet:ProgramObjectprogramChange a skos:Concept;
  skos:altLabel "program change";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "programChange";
  skos:related bacnet:ProgramRequest .

bacnet:PulseConverterObject a skos:Concept;
  skos:altLabel "pulse converter object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "PulseConverterObject";
  skos:related bacnet:PulseConverterObjectackedTransitions, bacnet:PulseConverterObjectadjustValue,
    bacnet:PulseConverterObjectcount, bacnet:PulseConverterObjectcountBeforeChange, bacnet:PulseConverterObjectcountChangeTime,
    bacnet:PulseConverterObjectcovIncrement, bacnet:PulseConverterObjectcovPeriod, bacnet:PulseConverterObjectdeadband,
    bacnet:PulseConverterObjecteventEnable, bacnet:PulseConverterObjecteventMessageTexts,
    bacnet:PulseConverterObjecteventState, bacnet:PulseConverterObjecteventTimeStamps,
    bacnet:PulseConverterObjecthighLimit, bacnet:PulseConverterObjectinputReference, bacnet:PulseConverterObjectlimitEnable,
    bacnet:PulseConverterObjectlowLimit, bacnet:PulseConverterObjectnotificationClass,
    bacnet:PulseConverterObjectnotifyType, bacnet:PulseConverterObjectoutOfService, bacnet:PulseConverterObjectpresentValue,
    bacnet:PulseConverterObjectreliability, bacnet:PulseConverterObjectscaleFactor, bacnet:PulseConverterObjectstatusFlags,
    bacnet:PulseConverterObjecttimeDelay, bacnet:PulseConverterObjectunits, bacnet:PulseConverterObjectupdateTime .

bacnet:PulseConverterObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:PulseConverterObjectcount a skos:Concept;
  skos:altLabel "count";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "count";
  skos:related xsd:unsignedLong .

bacnet:PulseConverterObjectcountBeforeChange a skos:Concept;
  skos:altLabel "count before change";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "countBeforeChange";
  skos:related xsd:unsignedLong .

bacnet:PulseConverterObjectcovPeriod a skos:Concept;
  skos:altLabel "cov period";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covPeriod";
  skos:related xsd:unsignedLong .

bacnet:PulseConverterObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:PulseConverterObjecttimeDelay a skos:Concept;
  skos:altLabel "time delay";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeDelay";
  skos:related xsd:unsignedLong .

bacnet:PulseConverterObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:float .

bacnet:PulseConverterObjectscaleFactor a skos:Concept;
  skos:altLabel "scale factor";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "scaleFactor";
  skos:related xsd:float .

bacnet:PulseConverterObjectadjustValue a skos:Concept;
  skos:altLabel "adjust value";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "adjustValue";
  skos:related xsd:float .

bacnet:PulseConverterObjectcovIncrement a skos:Concept;
  skos:altLabel "cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covIncrement";
  skos:related xsd:float .

bacnet:PulseConverterObjecthighLimit a skos:Concept;
  skos:altLabel "high limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "highLimit";
  skos:related xsd:float .

bacnet:PulseConverterObjectlowLimit a skos:Concept;
  skos:altLabel "low limit";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lowLimit";
  skos:related xsd:float .

bacnet:PulseConverterObjectdeadband a skos:Concept;
  skos:altLabel "deadband";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deadband";
  skos:related xsd:float .

bacnet:PulseConverterObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:PulseConverterObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:PulseConverterObjectupdateTime a skos:Concept;
  skos:altLabel "update time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "updateTime";
  skos:related bacnet:DateTime .

bacnet:PulseConverterObjectcountChangeTime a skos:Concept;
  skos:altLabel "count change time";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "countChangeTime";
  skos:related bacnet:DateTime .

bacnet:PulseConverterObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:PulseConverterObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:PulseConverterObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:PulseConverterObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:PulseConverterObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:PulseConverterObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:PulseConverterObjectunits a skos:Concept;
  skos:altLabel "units";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "units";
  skos:related bacnet:EngineeringUnits .

bacnet:PulseConverterObjectlimitEnable a skos:Concept;
  skos:altLabel "limit enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "limitEnable";
  skos:related bacnet:LimitEnable .

bacnet:PulseConverterObjectinputReference a skos:Concept;
  skos:altLabel "input reference";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "inputReference";
  skos:related bacnet:ObjectPropertyReference .

bacnet:ScheduleObject a skos:Concept;
  skos:altLabel "schedule object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ScheduleObject";
  skos:related bacnet:ScheduleObjecteffectivePeriod, bacnet:ScheduleObjectexceptionSchedule,
    bacnet:ScheduleObjectlistOfObjectPropertyReferences, bacnet:ScheduleObjectoutOfService,
    bacnet:ScheduleObjectpresentValue, bacnet:ScheduleObjectpriorityForWriting, bacnet:ScheduleObjectreliability,
    bacnet:ScheduleObjectscheduleDefault, bacnet:ScheduleObjectstatusFlags, bacnet:ScheduleObjectweeklySchedule .

bacnet:ScheduleObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related bacnet:Any .

bacnet:ScheduleObjectscheduleDefault a skos:Concept;
  skos:altLabel "schedule default";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "scheduleDefault";
  skos:related bacnet:Any .

bacnet:ScheduleObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:ScheduleObjectpriorityForWriting a skos:Concept;
  skos:altLabel "priority for writing";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityForWriting";
  skos:related xsd:unsignedLong .

bacnet:ScheduleObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:ScheduleObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:ScheduleObjectweeklySchedule a skos:Concept;
  skos:altLabel "weekly schedule";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "weeklySchedule";
  skos:related bacnet:ArrayOfDailySchedule .

bacnet:ScheduleObjectexceptionSchedule a skos:Concept;
  skos:altLabel "exception schedule";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "exceptionSchedule";
  skos:related bacnet:ArrayOfSpecialEvent .

bacnet:ScheduleObjecteffectivePeriod a skos:Concept;
  skos:altLabel "effective period";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "effectivePeriod";
  skos:related bacnet:DateRange .

bacnet:ScheduleObjectlistOfObjectPropertyReferences a skos:Concept;
  skos:altLabel "list of object property references";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "listOfObjectPropertyReferences";
  skos:related bacnet:SequenceOfDeviceObjectPropertyReference .

bacnet:StructuredViewObject a skos:Concept;
  skos:altLabel "structured view object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "StructuredViewObject";
  skos:related bacnet:StructuredViewObjectnodeSubtype, bacnet:StructuredViewObjectnodeType,
    bacnet:StructuredViewObjectsubordinateAnnotations, bacnet:StructuredViewObjectsubordinateList .

bacnet:StructuredViewObjectnodeSubtype a skos:Concept;
  skos:altLabel "node subtype";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "nodeSubtype";
  skos:related xsd:string .

bacnet:StructuredViewObjectsubordinateList a skos:Concept;
  skos:altLabel "subordinate list";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "subordinateList";
  skos:related bacnet:ArrayOfDeviceObjectReference .

bacnet:StructuredViewObjectsubordinateAnnotations a skos:Concept;
  skos:altLabel "subordinate annotations";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "subordinateAnnotations";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:StructuredViewObjectnodeType a skos:Concept;
  skos:altLabel "node type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "nodeType";
  skos:related bacnet:NodeType .

bacnet:TimePatternValueObject a skos:Concept;
  skos:altLabel "time pattern value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "TimePatternValueObject";
  skos:related bacnet:TimePatternValueObjecteventState, bacnet:TimePatternValueObjectisUtc,
    bacnet:TimePatternValueObjectoutOfService, bacnet:TimePatternValueObjectpresentValue,
    bacnet:TimePatternValueObjectpriorityArray, bacnet:TimePatternValueObjectreliability,
    bacnet:TimePatternValueObjectrelinquishDefault, bacnet:TimePatternValueObjectstatusFlags .

bacnet:TimePatternValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:TimePatternValueObjectisUtc a skos:Concept;
  skos:altLabel "is utc";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "isUtc";
  skos:related xsd:boolean .

bacnet:TimePatternValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:TimePatternValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:TimePatternValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:TimePatternValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related bacnet:DateTime .

bacnet:TimePatternValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:TimePatternValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:TimeValueObject a skos:Concept;
  skos:altLabel "time value object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "TimeValueObject";
  skos:related bacnet:TimeValueObjecteventState, bacnet:TimeValueObjectoutOfService,
    bacnet:TimeValueObjectpresentValue, bacnet:TimeValueObjectpriorityArray, bacnet:TimeValueObjectreliability,
    bacnet:TimeValueObjectrelinquishDefault, bacnet:TimeValueObjectstatusFlags .

bacnet:TimeValueObjectoutOfService a skos:Concept;
  skos:altLabel "out of service";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "outOfService";
  skos:related xsd:boolean .

bacnet:TimeValueObjectpresentValue a skos:Concept;
  skos:altLabel "present value";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "presentValue";
  skos:related xsd:string .

bacnet:TimeValueObjectrelinquishDefault a skos:Concept;
  skos:altLabel "relinquish default";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "relinquishDefault";
  skos:related xsd:string .

bacnet:TimeValueObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:TimeValueObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:TimeValueObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:TimeValueObjectpriorityArray a skos:Concept;
  skos:altLabel "priority array";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "priorityArray";
  skos:related bacnet:PriorityArray .

bacnet:TrendLogMultipleObject a skos:Concept;
  skos:altLabel "trend log multiple object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "TrendLogMultipleObject";
  skos:related bacnet:TrendLogMultipleObjectackedTransitions, bacnet:TrendLogMultipleObjectalignIntervals,
    bacnet:TrendLogMultipleObjectbufferSize, bacnet:TrendLogMultipleObjectenable, bacnet:TrendLogMultipleObjecteventEnable,
    bacnet:TrendLogMultipleObjecteventMessageTexts, bacnet:TrendLogMultipleObjecteventState,
    bacnet:TrendLogMultipleObjecteventTimeStamps, bacnet:TrendLogMultipleObjectintervalOffset,
    bacnet:TrendLogMultipleObjectlastNotifyRecord, bacnet:TrendLogMultipleObjectlogBuffer,
    bacnet:TrendLogMultipleObjectlogDeviceObjectProperty, bacnet:TrendLogMultipleObjectlogInterval,
    bacnet:TrendLogMultipleObjectloggingType, bacnet:TrendLogMultipleObjectnotificationClass,
    bacnet:TrendLogMultipleObjectnotificationThreshold, bacnet:TrendLogMultipleObjectnotifyType,
    bacnet:TrendLogMultipleObjectrecordCount, bacnet:TrendLogMultipleObjectrecordsSinceNotification,
    bacnet:TrendLogMultipleObjectreliability, bacnet:TrendLogMultipleObjectstartTime,
    bacnet:TrendLogMultipleObjectstatusFlags, bacnet:TrendLogMultipleObjectstopTime, bacnet:TrendLogMultipleObjectstopWhenFull,
    bacnet:TrendLogMultipleObjecttotalRecordCount, bacnet:TrendLogMultipleObjecttrigger .

bacnet:TrendLogMultipleObjectenable a skos:Concept;
  skos:altLabel "enable";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "enable";
  skos:related xsd:boolean .

bacnet:TrendLogMultipleObjectalignIntervals a skos:Concept;
  skos:altLabel "align intervals";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alignIntervals";
  skos:related xsd:boolean .

bacnet:TrendLogMultipleObjecttrigger a skos:Concept;
  skos:altLabel "trigger";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "trigger";
  skos:related xsd:boolean .

bacnet:TrendLogMultipleObjectstopWhenFull a skos:Concept;
  skos:altLabel "stop when full";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopWhenFull";
  skos:related xsd:boolean .

bacnet:TrendLogMultipleObjectlogInterval a skos:Concept;
  skos:altLabel "log interval";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logInterval";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectintervalOffset a skos:Concept;
  skos:altLabel "interval offset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "intervalOffset";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectbufferSize a skos:Concept;
  skos:altLabel "buffer size";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bufferSize";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectrecordCount a skos:Concept;
  skos:altLabel "record count";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordCount";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjecttotalRecordCount a skos:Concept;
  skos:altLabel "total record count";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "totalRecordCount";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectnotificationThreshold a skos:Concept;
  skos:altLabel "notification threshold";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationThreshold";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectrecordsSinceNotification a skos:Concept;
  skos:altLabel "records since notification";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordsSinceNotification";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectlastNotifyRecord a skos:Concept;
  skos:altLabel "last notify record";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastNotifyRecord";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:TrendLogMultipleObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:TrendLogMultipleObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:TrendLogMultipleObjectstartTime a skos:Concept;
  skos:altLabel "start time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "startTime";
  skos:related bacnet:DateTime .

bacnet:TrendLogMultipleObjectstopTime a skos:Concept;
  skos:altLabel "stop time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopTime";
  skos:related bacnet:DateTime .

bacnet:TrendLogMultipleObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:TrendLogMultipleObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:TrendLogMultipleObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:TrendLogMultipleObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:TrendLogMultipleObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:TrendLogMultipleObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:TrendLogMultipleObjectlogDeviceObjectProperty a skos:Concept;
  skos:altLabel "log device object property";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logDeviceObjectProperty";
  skos:related bacnet:ArrayOfDeviceObjectPropertyReference .

bacnet:TrendLogMultipleObjectloggingType a skos:Concept;
  skos:altLabel "logging type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "loggingType";
  skos:related bacnet:LoggingType .

bacnet:TrendLogMultipleObjectlogBuffer a skos:Concept;
  skos:altLabel "log buffer";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logBuffer";
  skos:related bacnet:SequenceOfLogMultipleRecord .

bacnet:TrendLogObject a skos:Concept;
  skos:altLabel "trend log object";
  skos:broader bacnet:StandardObject;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "TrendLogObject";
  skos:related bacnet:TrendLogObjectackedTransitions, bacnet:TrendLogObjectalignIntervals,
    bacnet:TrendLogObjectbufferSize, bacnet:TrendLogObjectclientCovIncrement, bacnet:TrendLogObjectcovResubscriptionInterval,
    bacnet:TrendLogObjectenable, bacnet:TrendLogObjecteventEnable, bacnet:TrendLogObjecteventMessageTexts,
    bacnet:TrendLogObjecteventState, bacnet:TrendLogObjecteventTimeStamps, bacnet:TrendLogObjectintervalOffset,
    bacnet:TrendLogObjectlastNotifyRecord, bacnet:TrendLogObjectlogBuffer, bacnet:TrendLogObjectlogDeviceObjectProperty,
    bacnet:TrendLogObjectlogInterval, bacnet:TrendLogObjectloggingType, bacnet:TrendLogObjectnotificationClass,
    bacnet:TrendLogObjectnotificationThreshold, bacnet:TrendLogObjectnotifyType, bacnet:TrendLogObjectrecordCount,
    bacnet:TrendLogObjectrecordsSinceNotification, bacnet:TrendLogObjectreliability, bacnet:TrendLogObjectstartTime,
    bacnet:TrendLogObjectstatusFlags, bacnet:TrendLogObjectstopTime, bacnet:TrendLogObjectstopWhenFull,
    bacnet:TrendLogObjecttotalRecordCount, bacnet:TrendLogObjecttrigger .

bacnet:TrendLogObjectenable a skos:Concept;
  skos:altLabel "enable";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "enable";
  skos:related xsd:boolean .

bacnet:TrendLogObjectstopWhenFull a skos:Concept;
  skos:altLabel "stop when full";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopWhenFull";
  skos:related xsd:boolean .

bacnet:TrendLogObjectalignIntervals a skos:Concept;
  skos:altLabel "align intervals";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "alignIntervals";
  skos:related xsd:boolean .

bacnet:TrendLogObjecttrigger a skos:Concept;
  skos:altLabel "trigger";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "trigger";
  skos:related xsd:boolean .

bacnet:TrendLogObjectlogInterval a skos:Concept;
  skos:altLabel "log interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logInterval";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectcovResubscriptionInterval a skos:Concept;
  skos:altLabel "cov resubscription interval";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "covResubscriptionInterval";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectbufferSize a skos:Concept;
  skos:altLabel "buffer size";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "bufferSize";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectrecordCount a skos:Concept;
  skos:altLabel "record count";
  skos:broader bacnet:WritableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordCount";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjecttotalRecordCount a skos:Concept;
  skos:altLabel "total record count";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "totalRecordCount";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectintervalOffset a skos:Concept;
  skos:altLabel "interval offset";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "intervalOffset";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectnotificationThreshold a skos:Concept;
  skos:altLabel "notification threshold";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationThreshold";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectrecordsSinceNotification a skos:Concept;
  skos:altLabel "records since notification";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "recordsSinceNotification";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectlastNotifyRecord a skos:Concept;
  skos:altLabel "last notify record";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lastNotifyRecord";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectnotificationClass a skos:Concept;
  skos:altLabel "notification class";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notificationClass";
  skos:related xsd:unsignedLong .

bacnet:TrendLogObjectstatusFlags a skos:Concept;
  skos:altLabel "status flags";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "statusFlags";
  skos:related bacnet:StatusFlags .

bacnet:TrendLogObjectreliability a skos:Concept;
  skos:altLabel "reliability";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reliability";
  skos:related bacnet:Reliability .

bacnet:TrendLogObjectstartTime a skos:Concept;
  skos:altLabel "start time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "startTime";
  skos:related bacnet:DateTime .

bacnet:TrendLogObjectstopTime a skos:Concept;
  skos:altLabel "stop time";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "stopTime";
  skos:related bacnet:DateTime .

bacnet:TrendLogObjecteventState a skos:Concept;
  skos:altLabel "event state";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventState";
  skos:related bacnet:EventState .

bacnet:TrendLogObjecteventEnable a skos:Concept;
  skos:altLabel "event enable";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventEnable";
  skos:related bacnet:EventTransitionBits .

bacnet:TrendLogObjectackedTransitions a skos:Concept;
  skos:altLabel "acked transitions";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "ackedTransitions";
  skos:related bacnet:EventTransitionBits .

bacnet:TrendLogObjectnotifyType a skos:Concept;
  skos:altLabel "notify type";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "notifyType";
  skos:related bacnet:NotifyType .

bacnet:TrendLogObjecteventTimeStamps a skos:Concept;
  skos:altLabel "event time stamps";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventTimeStamps";
  skos:related bacnet:ArrayOfTimeStamp .

bacnet:TrendLogObjecteventMessageTexts a skos:Concept;
  skos:altLabel "event message texts";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "eventMessageTexts";
  skos:related bacnet:ArrayOfCharacterString .

bacnet:TrendLogObjectlogDeviceObjectProperty a skos:Concept;
  skos:altLabel "log device object property";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logDeviceObjectProperty";
  skos:related bacnet:DeviceObjectPropertyReference .

bacnet:TrendLogObjectclientCovIncrement a skos:Concept;
  skos:altLabel "client cov increment";
  skos:broader bacnet:OptionalProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "clientCovIncrement";
  skos:related bacnet:ClientCOV .

bacnet:TrendLogObjectloggingType a skos:Concept;
  skos:altLabel "logging type";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "loggingType";
  skos:related bacnet:LoggingType .

bacnet:TrendLogObjectlogBuffer a skos:Concept;
  skos:altLabel "log buffer";
  skos:broader bacnet:ReadableProperty;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "logBuffer";
  skos:related bacnet:SequenceOfLogRecord .

bacnet:acknowledgeAlarm a skos:Concept;
  skos:altLabel "acknowledge alarm";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "acknowledgeAlarm" .

bacnet:confirmedCOVNotification a skos:Concept;
  skos:altLabel "confirmed covnotification";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "confirmedCOVNotification" .

bacnet:confirmedEventNotification a skos:Concept;
  skos:altLabel "confirmed event notification";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "confirmedEventNotification" .

bacnet:getAlarmSummary a skos:Concept;
  skos:altLabel "get alarm summary";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "getAlarmSummary" .

bacnet:getEnrollmentSummary a skos:Concept;
  skos:altLabel "get enrollment summary";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "getEnrollmentSummary" .

bacnet:subscribeCOV a skos:Concept;
  skos:altLabel "subscribe cov";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "subscribeCOV" .

bacnet:atomicReadFile a skos:Concept;
  skos:altLabel "atomic read file";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "atomicReadFile" .

bacnet:atomicWriteFile a skos:Concept;
  skos:altLabel "atomic write file";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "atomicWriteFile" .

bacnet:addListElement a skos:Concept;
  skos:altLabel "add list element";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "addListElement" .

bacnet:removeListElement a skos:Concept;
  skos:altLabel "remove list element";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "removeListElement" .

bacnet:createObject a skos:Concept;
  skos:altLabel "create object";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "createObject" .

bacnet:deleteObject a skos:Concept;
  skos:altLabel "delete object";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deleteObject" .

bacnet:readProperty a skos:Concept;
  skos:altLabel "read property";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "readProperty" .

bacnet:readPropertyMultiple a skos:Concept;
  skos:altLabel "read property multiple";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "readPropertyMultiple" .

bacnet:writeProperty a skos:Concept;
  skos:altLabel "write property";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "writeProperty" .

bacnet:writePropertyMultiple a skos:Concept;
  skos:altLabel "write property multiple";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "writePropertyMultiple" .

bacnet:deviceCommunicationControl a skos:Concept;
  skos:altLabel "device communication control";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "deviceCommunicationControl" .

bacnet:confirmedPrivateTransfer a skos:Concept;
  skos:altLabel "confirmed private transfer";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "confirmedPrivateTransfer" .

bacnet:confirmedTextMessage a skos:Concept;
  skos:altLabel "confirmed text message";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "confirmedTextMessage" .

bacnet:reinitializeDevice a skos:Concept;
  skos:altLabel "reinitialize device";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "reinitializeDevice" .

bacnet:vtOpen a skos:Concept;
  skos:altLabel "vt open";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vtOpen" .

bacnet:vtClose a skos:Concept;
  skos:altLabel "vt close";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vtClose" .

bacnet:vtData a skos:Concept;
  skos:altLabel "vt data";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "vtData" .

bacnet:iAm a skos:Concept;
  skos:altLabel "i am";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "iAm" .

bacnet:iHave a skos:Concept;
  skos:altLabel "i have";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "iHave" .

bacnet:unconfirmedCOVNotification a skos:Concept;
  skos:altLabel "unconfirmed covnotification";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "unconfirmedCOVNotification" .

bacnet:unconfirmedEventNotification a skos:Concept;
  skos:altLabel "unconfirmed event notification";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "unconfirmedEventNotification" .

bacnet:unconfirmedPrivateTransfer a skos:Concept;
  skos:altLabel "unconfirmed private transfer";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "unconfirmedPrivateTransfer" .

bacnet:unconfirmedTextMessage a skos:Concept;
  skos:altLabel "unconfirmed text message";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "unconfirmedTextMessage" .

bacnet:timeSynchronization a skos:Concept;
  skos:altLabel "time synchronization";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "timeSynchronization" .

bacnet:whoHas a skos:Concept;
  skos:altLabel "who has";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "whoHas" .

bacnet:whoIs a skos:Concept;
  skos:altLabel "who is";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "whoIs" .

bacnet:readRange a skos:Concept;
  skos:altLabel "read range";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "readRange" .

bacnet:utcTimeSynchronization a skos:Concept;
  skos:altLabel "utc time synchronization";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "utcTimeSynchronization" .

bacnet:lifeSafetyOperation a skos:Concept;
  skos:altLabel "life safety operation";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "lifeSafetyOperation" .

bacnet:subscribeCOVProperty a skos:Concept;
  skos:altLabel "subscribe covproperty";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "subscribeCOVProperty" .

bacnet:getEventInformation a skos:Concept;
  skos:altLabel "get event information";
  skos:broader bacnet:servicesSupported;
  skos:inScheme bacnet:scheme;
  skos:prefLabel "getEventInformation" .
